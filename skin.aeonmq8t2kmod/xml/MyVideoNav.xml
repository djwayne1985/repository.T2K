<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- Aeon MQ 8 -->
	<defaultcontrol always="true">51</defaultcontrol>
	<onload condition="Window.Previous(1170)">Container.SetViewMode($INFO[skin.string(setviewvideo)])</onload>
	<onload condition="Window.Previous(1170)">SetFocus(9940)</onload>
	<onload condition="!System.HasAddon(service.upnext) + Container.Content(episodes)">InstallAddon(service.upnext)</onload>
	<onload condition="!System.HasAddon(script.tv.show.next.aired) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">InstallAddon(script.tv.show.next.aired)</onload>
	<onload condition="System.HasAddon(script.tv.show.next.aired) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">RunScript(script.tv.show.next.aired,backend=True)</onload>
	<onload condition="System.HasAddon(script.skin.helper.service) + !Skin.HasSetting(animatedposters_window)">Skin.Reset(SkinHelper.EnableAnimatedPosters)</onload>
	<onload condition="System.HasAddon(script.skin.helper.service) + Skin.HasSetting(animatedposters_window) + !Container.Content(episodes)">Skin.SetBool(SkinHelper.EnableAnimatedPosters)</onload>
	<onload condition="Container.Content(genres) + [String.IsEmpty(skin.string(resource.images.moviegenreicons.path)) | String.IsEqual(skin.string(resource.images.moviegenreicons.path),resource://resource.images.moviegenreicons.xzener-flat/)]">InstallAddon(resource.images.moviegenreicons.xzener-flat)</onload>
	<onunload condition="Skin.HasSetting(kioskcode)">Skin.Reset(codestep)</onunload>
	<onunload condition="Skin.HasSetting(trailers)">Skin.Reset(trailers)</onunload>
	<onunload condition="Skin.HasSetting(playlists)">Skin.Reset(playlists)</onunload>
	<views>51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73</views>
	<controls>
		<control type="group">
			<include content="media_backgrounds">	
				<param name="left" value="0" />
				<param name="top" value="0" />
				<param name="width" value="1920" />
				<param name="height" value="1080" />
				<param name="visible" value="!Control.IsVisible(70)" />
			</include>	
			<include content="media_backgrounds">	
				<param name="left" value="243" />
				<param name="top" value="0" />
				<param name="width" value="1677" />
				<param name="height" value="944" />
				<param name="visible" value="Control.IsVisible(70)" />
			</include>			
		</control>
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>1920</width>
			<height>1080</height>
			<texture>black.png</texture>
			<colordiffuse>80FFFFFF</colordiffuse>
			<include>animation_fade</include>
			<visible>Control.IsVisible(71)</visible>
		</control>
		<!-- default group -->
		<control type="group">
			<include>animation_window</include>
			<!-- Controle tvshow tagline -->
			<control type="label" id="565">
				<include>invisible</include>
				<label>$VAR[videotvshowtag]</label>
				<visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
			</control>
			<!-- to menu/kiosk condition -->
			<control type="button" id="9900">
				<include>invisible</include>
				<onfocus condition="![Skin.HasSetting(kiosk) | Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)]">SetFocus(9300)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)">SetFocus(9100)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosk)">SetFocus(51)</onfocus>
			</control>
			<!-- Esconde colecao para ver fanart -->
			<control type="button" id="9920">
				<include>invisible</include>
				<onleft>SetFocus(51)</onleft>
				<onright>SetFocus(51)</onright>
				<onup>SetFocus(51)</onup>
				<ondown>SetFocus(51)</ondown>
			</control>
			<!-- Painel de info auto -->
			<control type="image" id="9921">
				<include>invisible</include>
				<animation effect="fade" start="0" end="100" time="150" delay="1000" condition="String.Contains(skin.string(panel_seconds),1)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="2000" condition="String.Contains(skin.string(panel_seconds),2)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="3000" condition="String.Contains(skin.string(panel_seconds),3)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="4000" condition="String.Contains(skin.string(panel_seconds),4)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="5000" condition="String.Contains(skin.string(panel_seconds),5)">Visible</animation>
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
			</control>
			<!-- Refresh das vistas -->
			<control type="button" id="9922">
				<include>invisible</include>
				<animation effect="fade" start="0" end="100" time="150" delay="3000">Hidden</animation>
				<visible>Window.IsVisible(1170)</visible>
			</control>
			<!-- Controle estudio -->
			<control type="image" id="556">
				<include>invisible</include>
				<texture>$VAR[studios_path]$INFO[ListItem.Studio,,.png]</texture>
			</control>
			<!-- Controle mpaa -->
			<control type="image" id="557">
				<include>invisible</include>
				<texture>$VAR[mpaa]</texture>
			</control>
			<!-- Controle video codec -->
			<control type="image" id="558">
				<include>invisible</include>
				<texture>$VAR[videocodec_path]$INFO[ListItem.VideoCodec,,.png]</texture>
			</control>
			<!-- Controle resolucao -->
			<control type="image" id="560">
				<include>invisible</include>
				<texture>$VAR[resolution_path]$INFO[ListItem.VideoResolution,,.png]</texture>
			</control>
			<!-- Controle aspecto -->
			<control type="image" id="561">
				<include>invisible</include>
				<texture>$VAR[aspectratio_path]$INFO[ListItem.VideoAspect,,.png]</texture>
			</control>
			<!-- Controle audio codec -->
			<control type="image" id="562">
				<include>invisible</include>
				<texture>$VAR[audiocodec_path]$INFO[ListItem.AudioCodec,,.png]</texture>
			</control>
			<!-- Controle canais de audio -->
			<control type="image" id="563">
				<include>invisible</include>
				<texture>$INFO[ListItem.Property(AudioLanguage.1)]</texture>
			</control>
			<!-- Controle legenda -->
			<control type="image" id="564">
				<include>invisible</include>
				<texture>$INFO[ListItem.Property(SubtitleLanguage.1)]</texture>
			</control>
			<!-- Grupo ocultar flags ou fanart -->
			<control type="group">
				<top>45</top>
				<!-- 67,68 -->
				<include condition="Skin.HasSetting(view3dwall_video)">View3DWall</include>
				<include>animation_hiddenview</include>
				<control type="image">
					<left>0</left>
					<top>765</top>
					<width>1920</width>
					<height>270</height>
					<texture diffuse="shadow_mask.png" colordiffuse="$INFO[skin.string(colorfloor)]">$VAR[texture_base]</texture>
					<visible>![Control.IsVisible(57) | Control.IsVisible(70)]</visible>
				</control>
				<!-- Barra do rodape -->
				<control type="image">
					<left>0</left>
					<top>765</top>
					<width>1920</width>
					<height>270</height>
					<texture colordiffuse="$INFO[skin.string(colorfloor)]">shadow_mask.png</texture>
					<visible>![Control.IsVisible(57) | Control.IsVisible(70)]</visible>
				</control>
				<!-- Etiquetas -->
				<control type="group">
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
					<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
					<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out" condition="Control.IsVisible(57) | Control.IsVisible(70)">true</animation>
					<visible>![String.IsEqual(ListItem.Label,..) | String.IsEmpty(Control.GetLabel(556)) + String.IsEmpty(Control.GetLabel(557)) + String.IsEmpty(Control.GetLabel(558)) + String.IsEmpty(Control.GetLabel(559)) + String.IsEmpty(Control.GetLabel(560)) + String.IsEmpty(Control.GetLabel(561)) + String.IsEmpty(Control.GetLabel(562)) + String.IsEmpty(Control.GetLabel(563)) + String.IsEmpty(Control.GetLabel(564))] + [String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)]</visible>
					<control type="image">
						<left>0</left>
						<top>965</top>
						<height>73</height>
						<width>1920</width>
						<texture colordiffuse="cc505050">shadow_mask.png</texture>
						<visible>Skin.HasSetting(texture_white)</visible>
					</control>
					<include content="mediaflags_group">					
						<param name="left" value="30" />
						<param name="top" value="972" />
						<param name="itemgap" value="5" />
					</include>
					<control type="image">
						<left>0</left>
						<top>975</top>
						<height>63</height>
						<width>1920</width>
						<texture>gradient_small.png</texture>
					</control>
				</control>
			</control>
			<!-- TITULO/TAGLINE/ESTRELAS -->
			<control type="group">
				<top>-45</top>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="0,-30" time="500" tween="sine" easing="out" condition="!Skin.HasSetting(videoinfobar)">Conditional</animation>
				<visible>[Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(58) | Control.IsVisible(60) | Control.IsVisible(61) | Control.IsVisible(62) | Control.IsVisible(63) | Control.IsVisible(64) | Control.IsVisible(65) | Control.IsVisible(66) | Control.IsVisible(67) | Control.IsVisible(68) | Control.IsVisible(69) | Control.IsVisible(72) | Control.IsVisible(73)] + ![ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922) | Control.HasFocus(9940) | Window.IsActive(movieinformation)]</visible>
				<control type="image">
					<left>0</left>
					<top>-30</top>
					<width>1920</width>
					<height>480</height>
					<texture flipy="true" diffuse="shadow_mask.png">$VAR[texture_base]</texture>
					<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
				</control>
				<!-- Grupo da esquerda -->
				<control type="grouplist">
					<left>45</left>
					<top>87</top>
					<orientation>vertical</orientation>
					<itemgap>5</itemgap>
					<!-- Titulo -->
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>1380</width>
						<height>55</height>						
						<label>$VAR[videotitle]</label>
						<font>font_title</font>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>![Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))]</visible>
					</control>
					<!-- Clearlogo -->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>450</width>
						<height>60</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
						<fadetime>commonfadetime</fadetime>
						<visible>Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<!-- Subtitulo -->
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>1380</width>
						<height>30</height>
						<aligny>top</aligny>						
						<label>[B]$VAR[years][/B]$VAR[runtime, | ]$INFO[ListItem.Tagline, | ]$INFO[ListItem.Artist, | ]$VAR[videotvshowtag, | ]</label>
						<font>font_subtitle</font>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>![String.IsEmpty(ListItem.Year) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Year)) + String.IsEmpty(ListItem.Duration) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration)) + String.IsEmpty(ListItem.Tagline) + String.IsEmpty(ListItem.Artist) | Skin.HasSetting(nomoviestagline) | String.IsEqual(ListItem.Label,..)]</visible>
					</control>
				</control>
				<!-- Grupo da direita -->
				<!-- Estrelas -->
				<control type="image">
					<left>1570</left>
					<top>100</top>
					<width>300</width>
					<height>30</height>
					<texture fallback="$VAR[styleratingstars,,0.png]">$VAR[styleratingstars]$INFO[ListItem.Rating,,.png]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<colordiffuse>$VAR[colorratingstars]</colordiffuse>
				</control>
				<control type="grouplist">
					<left>1475</left>
					<top>142</top>
					<itemgap>0</itemgap>						
					<!-- Nota e votos -->
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>400</width>
						<height>38</height>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.RatingAndVotes]</label>
						<font>font_subtitle</font>						
					</control>
					<!-- Top250 -->
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>400</width>
						<height>38</height>
						<align>right</align>
						<aligny>center</aligny>						
						<label>[B]$INFO[Window(home).Property(SkinHelper.ListItem.IMDB.Top250),Top250 - ][/B]</label>
						<font>font_subtitle</font>
						<textcolor>$INFO[skin.string(colorheader)]</textcolor>
						<visible>!String.IsEqual(Window(home).Property(SkinHelper.ListItem.IMDB.Top250),0)</visible>
					</control>
				</control>
			</control>
			<!-- TAGLINE -->
			<control type="group">
				<top>-45</top>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="0,-30" time="500" tween="sine" easing="out" condition="![Skin.HasSetting(videoinfobar) | Skin.HasSetting(videodate)]">Conditional</animation>
				<animation effect="slide" end="0,75" time="500" tween="sine" easing="out" condition="![String.IsEmpty(ListItem.Property(AudioLanguage.1)) | Control.IsVisible(59)]">Conditional</animation>
				<visible>[Control.IsVisible(51) | Control.IsVisible(55) | Control.IsVisible(59)] + ![ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922) | Control.HasFocus(9940) | Window.IsActive(movieinformation) | Skin.HasSetting(notvshowstagline) | String.IsEmpty(Control.GetLabel(555)) | String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
				<control type="image">
					<left>0</left>
					<top>-75</top>
					<width>1920</width>
					<height>525</height>
					<texture flipy="true" diffuse="shadow_mask.png">$VAR[texture_base]</texture>
					<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
				</control>
				<control type="label" id="555">
					<left>45</left>
					<top>105</top>
					<width>825</width>
					<height>38</height>					
					<label>$VAR[videotvshowtag]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
					<shadowcolor>grey</shadowcolor>
					<visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
				</control>
			</control>
			<!-- VISTAS -->
			<control type="group">
				<top>45</top>
				<include>animation_hiddenview</include>
				<!-- 51 -->
				<include>ViewRightList</include>
				<!-- 52 -->
				<include condition="Skin.HasSetting(viewbanner_video)">ViewBanner</include>
				<!-- 53 -->
				<include condition="Skin.HasSetting(viewbannerinfo_video)">ViewBannerInfo</include>
				<!-- 54 -->
				<include condition="Skin.HasSetting(viewposter_video)">ViewPoster</include>
				<!-- 55 -->
				<include condition="Skin.HasSetting(viewlowlist_video)">ViewLowList</include>
				<!-- 56 -->
				<include condition="Skin.HasSetting(viewwall_video)">ViewWallVideo</include>
				<!-- 57 -->
				<include condition="Skin.HasSetting(viewglasslist_video)">ViewGlassList</include>
				<!-- 58 -->
				<include condition="Skin.HasSetting(viewcoverflow_video)">ViewCoverFlowVideo</include>
				<!-- 59 -->
				<include condition="Skin.HasSetting(viewwide_video)">ViewWide</include>
				<!-- 60 -->
				<include condition="Skin.HasSetting(viewshowart_video)">ViewShowArt</include>
				<!-- 61 -->
				<include condition="Skin.HasSetting(viewmultiplex_video)">ViewMultiplex</include>
				<!-- 62 -->
				<include condition="Skin.HasSetting(viewpanel_video)">ViewPanel</include>
				<!-- 63 -->
				<include condition="Skin.HasSetting(viewshelf_video)">ViewShelf</include>
				<!-- 64 -->
				<include condition="Skin.HasSetting(viewlandscapex_video)">ViewLandScapeX</include>
				<!-- 65 -->
				<include condition="Skin.HasSetting(viewsets_video)">ViewSets</include>
				<!-- 66 -->
				<include condition="Skin.HasSetting(viewshowcase_video)">ViewShowCaseVideo</include>
				<!-- 69 -->
				<include condition="Skin.HasSetting(viewposterlite_video)">ViewPosterLite</include>
				<!-- 70 -->
				<include condition="Skin.HasSetting(viewposterlist_video)">ViewPosterList</include>
				<!-- 71 -->
				<include condition="Skin.HasSetting(viewtotalart_video)">ViewTotalArt</include>
				<!-- 72 -->
				<include condition="Skin.HasSetting(viewmyviewtype1_video)">ViewMyViewType1</include>
				<!-- 73 -->
				<include condition="Skin.HasSetting(viewframe_video)">ViewFrame</include>
			</control>
			<include>ScrollLabel</include>
			<include condition="Skin.HasSetting(videoinfobar)">MultiData</include>
			<include>TopMenu_Video</include>
			<include>background_black</include>
			<include>touchscreen</include>
		</control>
	</controls>
</window>