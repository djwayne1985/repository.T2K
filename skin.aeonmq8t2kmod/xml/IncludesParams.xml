<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Aeon MQ 8 -->
	<include name="mainmenu_font">
		<definition>
			<control type="label">
				<left>50</left>
				<top>$PARAM[top]</top>
				<width>550</width>
				<height>90</height>				
				<align>$PARAM[align]</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<font>$PARAM[font]</font>
				<textcolor>$INFO[skin.string(colorfont)]</textcolor>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="300" condition="Skin.HasSetting(submode)">Conditional</animation>
			</control>
		</definition>
	</include>
	<include name="mainmenu_fontfocus">
		<definition>
			<control type="label">
				<left>50</left>
				<top>$PARAM[top]</top>
				<width>525</width>
				<height>90</height>				
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<font>$PARAM[font]</font>
				<textcolor>$INFO[skin.string(colorfont)]</textcolor>
				<animation effect="zoom" center="50,20" start="100" end="130" time="500" delay="150" tween="sine" easing="out">Focus</animation>
				<animation effect="zoom" center="50,20" start="130" end="100" time="100" delay="0" tween="sine" easing="out">UnFocus</animation>
				<animation effect="fade" start="100" end="50" time="100" condition="!Control.Hasfocus(9000)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,40" time="400" delay="300" tween="quadratic" easing="in" condition="Skin.HasSetting(submode) + Skin.HasSetting(mainmenuvertical)">Conditional</animation>
			</control>
		</definition>
	</include>
	<include name="mainmenu_presets">
		<item>
			<label>31169</label>
			<icon>$VAR[settings_background]</icon>
			<property name="condition"></property>
			<property name="name">menuvirtual</property>
			<property name="master">virtual</property>
			<property name="status">virtual</property>
			<property name="submenu">none</property>
			<property name="path">none</property>
			<onclick>SetFocus(450)</onclick>
		</item>
	</include>
	<include name="mainmenu_controls">
		<definition>
			<control type="$PARAM[type]" id="$PARAM[id]">
				<left>$PARAM[left]</left>
				<top>0</top>
				<width>36</width>
				<height>36</height>
				<onleft>$PARAM[onleft]</onleft>
				<onright>$PARAM[onright]</onright>
				<onup>9000</onup>
				<ondown>8003</ondown>
				<onclick>$PARAM[action]</onclick>
				<onclick>$PARAM[action2]</onclick>
				<label></label>
				<texturefocus>$PARAM[texture]</texturefocus>
				<texturenofocus>$PARAM[texture]</texturenofocus>
				<usealttexture>$PARAM[usealttexture]</usealttexture>
				<alttexturefocus>$PARAM[alttexture]</alttexturefocus>
				<alttexturenofocus>$PARAM[alttexture]</alttexturenofocus>
				<animation effect="fade" start="100" end="50" time="0" condition="!Control.Hasfocus($PARAM[id])">conditional</animation>
				<enable>$PARAM[enable]</enable>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<!-- Conteudo do menu principal -->
	<include name="mainmenu_items">
		<definition>
			<label fallback="31014">$VAR[menu$PARAM[item].label]</label>
			<icon>$VAR[themes_path]$INFO[skin.string(menu$PARAM[item].master)].jpg</icon>
			<thumb>$INFO[skin.string(menu$PARAM[item].background)]</thumb>
			<property name="composition">$INFO[skin.string(menu$PARAM[item].composition)]</property>
			<property name="colorcomposition">$INFO[skin.string(menu$PARAM[item].colorcomposition)]</property>
			<property name="visible">$INFO[skin.string(menu$PARAM[item].visible)]</property>
			<property name="name">menu$PARAM[item]</property>
			<property name="master">$INFO[skin.string(menu$PARAM[item].master)]</property>
			<property name="status">$INFO[skin.string(menu$PARAM[item].master)]$PARAM[item]</property>
			<property name="submenu">$INFO[skin.string(menu$PARAM[item].submenu)]</property>
			<property name="type">$INFO[skin.string(menu$PARAM[item].type)]</property>
			<property name="sort">$INFO[skin.string(menu$PARAM[item].sort)]</property>
			<property name="order">$INFO[skin.string(menu$PARAM[item].order)]</property>
			<property name="widgets">$INFO[skin.string(menu$PARAM[item].widgets)]</property>
			<property name="widgetsstatussort">$INFO[skin.string(menu$PARAM[item].widgetsstatussort)]</property>
			<property name="widgetsstatus">$INFO[skin.string(menu$PARAM[item].widgetsstatus)]</property>			
			<property name="type1">$INFO[skin.string(menu$PARAM[item].type1)]</property>
			<property name="sort1">$INFO[skin.string(menu$PARAM[item].sort1)]</property>
			<property name="order1">$INFO[skin.string(menu$PARAM[item].order1)]</property>
			<property name="widgets1">$INFO[skin.string(menu$PARAM[item].widgets1)]</property>
			<property name="widgetsstatussort1">$INFO[skin.string(menu$PARAM[item].widgetsstatussort1)]</property>
			<property name="widgetsstatus1">$INFO[skin.string(menu$PARAM[item].widgetsstatus1)]</property>			
			<property name="type2">$INFO[skin.string(menu$PARAM[item].type2)]</property>
			<property name="sort2">$INFO[skin.string(menu$PARAM[item].sort2)]</property>
			<property name="order2">$INFO[skin.string(menu$PARAM[item].order2)]</property>
			<property name="widgets2">$INFO[skin.string(menu$PARAM[item].widgets2)]</property>
			<property name="widgetsstatussort2">$INFO[skin.string(menu$PARAM[item].widgetsstatussort2)]</property>
			<property name="widgetsstatus2">$INFO[skin.string(menu$PARAM[item].widgetsstatus2)]</property>			
			<property name="type3">$INFO[skin.string(menu$PARAM[item].type3)]</property>
			<property name="sort3">$INFO[skin.string(menu$PARAM[item].sort3)]</property>
			<property name="order3">$INFO[skin.string(menu$PARAM[item].order3)]</property>
			<property name="widgets3">$INFO[skin.string(menu$PARAM[item].widgets3)]</property>
			<property name="widgetsstatussort3">$INFO[skin.string(menu$PARAM[item].widgetsstatussort3)]</property>
			<property name="widgetsstatus3">$INFO[skin.string(menu$PARAM[item].widgetsstatus3)]</property>			
			<property name="fastchange">$INFO[skin.string(menu$PARAM[item].fastchange)]</property>			
			<property name="path">$INFO[skin.string(menu$PARAM[item].path)]</property>
			<property name="playlistcount">$INFO[Window(home).Property(playlist$PARAM[item].count)]</property>
			<property name="playlistunwatched">$INFO[Window(home).Property(playlist$PARAM[item].unwatched)]</property>
			<onclick>Skin.SetString(backgroundcopy,$INFO[Container(9000).ListItem.Icon])</onclick>
			<onclick condition="Window.IsVisible(home) + ![String.IsEqual(skin.string(menu$PARAM[item].master),vplaylist) | String.IsEqual(skin.string(menu$PARAM[item].master),aplaylist) | String.IsEqual(skin.string(menu$PARAM[item].master),vnodes) | String.IsEqual(skin.string(menu$PARAM[item].master),anodes) | String.IsEqual(skin.string(menu$PARAM[item].master),addons)]">$INFO[skin.string(menu$PARAM[item].path)]</onclick>
			<onclick condition="Window.IsVisible(home) + [String.IsEqual(skin.string(menu$PARAM[item].master),vplaylist) | String.IsEqual(skin.string(menu$PARAM[item].master),vnodes)]">ActivateWindow(videos,$INFO[skin.string(menu$PARAM[item].path)],return)</onclick>
			<onclick condition="Window.IsVisible(home) + [String.IsEqual(skin.string(menu$PARAM[item].master),aplaylist) | String.IsEqual(skin.string(menu$PARAM[item].master),anodes)]">ActivateWindow(music,$INFO[skin.string(menu$PARAM[item].path)],return)</onclick>
			<onclick condition="Window.IsVisible(home) + String.IsEqual(skin.string(menu$PARAM[item].master),addons)">RunAddon($INFO[skin.string(menu$PARAM[item].path)])</onclick>
			<onclick condition="Window.IsVisible(1157)">SetFocus(450)</onclick>
			<visible>![String.IsEmpty(skin.string(menu$PARAM[item].master)) | String.IsEqual(skin.string(menu$PARAM[item].visible),off)] | Window.IsVisible(1157)</visible>
		</definition>
	</include>
	<!-- ########## MENU PRINCIPAL ########## -->
	<include name="mainmenu">
		<definition>
			<control type="$PARAM[type]" id="9000">
				<left>0</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<onleft condition="Window.IsVisible(1157) + ![String.IsEqual(Container(9000).ListItem.Property(master),virtual) | String.IsEmpty(Container(9000).ListItem.Property(master)) | String.IsEmpty(Container(9000).ListItem.Property(submenu))]">Skin.SetString(submenu,$INFO[Container(9000).ListItem.Property(submenu)])</onleft>
				<onleft condition="Window.IsVisible(1157) + ![String.IsEqual(Container(9000).ListItem.Property(master),virtual) | String.IsEmpty(Container(9000).ListItem.Property(master)) | String.IsEmpty(Container(9000).ListItem.Property(submenu))]">Skin.SetBool(submode)</onleft>
				<onleft condition="Window.IsVisible(1157) + ![String.IsEqual(Container(9000).ListItem.Property(master),virtual) | String.IsEmpty(Container(9000).ListItem.Property(master)) | String.IsEmpty(Container(9000).ListItem.Property(submenu))]">ActivateWindow(1101)</onleft>
				<onleft>$PARAM[onleft]</onleft>
				<onright>$PARAM[onright]</onright>
				<onup>$PARAM[onup]</onup>
				<ondown>$PARAM[ondown]</ondown>
				<orientation>$PARAM[orientation]</orientation>
				<scrolltime tween="sine" easing="out">500</scrolltime>
				<focusposition>0</focusposition>
				<movement>$PARAM[movement]</movement>
				<animation effect="fade" start="100" end="0" time="200" condition="$PARAM[fade]">Conditional</animation>
				<itemlayout width="$PARAM[itemlayoutwidth]" height="$PARAM[itemlayoutheight]">
					<include content="mainmenucustom_color" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="50007399" />
						<param name="visible" value="![String.IsEmpty(ListItem.Property(master)) | !String.IsEmpty(ListItem.Property(visible))]" />
					</include>
					<include content="mainmenucustom_color" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="50B20000" />
						<param name="visible" value="[String.IsEmpty(ListItem.Property(master)) | !String.IsEmpty(ListItem.Property(visible))]" />
					</include>
					<include content="mainmenucustom_color" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="50C4941D" />
						<param name="visible" value="String.IsEmpty(ListItem.Property(master))" />
					</include>
					<include content="mainmenucustom_color" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="304C9900" />
						<param name="visible" value="String.IsEqual(ListItem.Property(master),virtual)" />
					</include>
					<include content="mainmenucustom_font" condition="Window.IsVisible(1157)">
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font1)">
						<param name="font" value="font_menu1" />
						<param name="top" value="3" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font2)">
						<param name="font" value="font_menu2" />
						<param name="top" value="1" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font3)">
						<param name="font" value="font_menu3" />
						<param name="top" value="3" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font4)">
						<param name="font" value="font_menu4" />
						<param name="top" value="1" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font5)">
						<param name="font" value="font_menu5" />
						<param name="top" value="8" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font6)">
						<param name="font" value="font_menu6" />
						<param name="top" value="0" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font7)">
						<param name="font" value="font_menu7" />
						<param name="top" value="8" />
					</include>
					<include content="mainmenu_font" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font8)">
						<param name="font" value="font_menu8" />
						<param name="top" value="-2" />
					</include>
				</itemlayout>
				<focusedlayout width="$PARAM[focusedlayoutwidth]" height="$PARAM[focusedlayoutheight]">
					<control type="button">
						<include>invisible</include>
						<onfocus condition="String.Contains(ListItem.Property(widgets),directors)">Skin.SetString(widgetsfix,directors)</onfocus>
						<onfocus condition="String.IsEqual(ListItem.Property(widgets),music.genres)">Skin.SetString(widgetsfix,musicgenres)</onfocus>
						<onfocus condition="String.Contains(ListItem.Property(widgets),genres) + !String.IsEqual(Container(9000).ListItem.Property(widgets),music.genres)">Skin.SetString(widgetsfix,videogenres)</onfocus>
						<onfocus condition="String.Contains(ListItem.Property(widgets),countries)">Skin.SetString(widgetsfix,countries)</onfocus>
						<onfocus condition="String.Contains(ListItem.Property(widgets),studios)">Skin.SetString(widgetsfix,studios)</onfocus>						
						<onfocus condition="String.Contains(ListItem.Property(widgets),years)">Skin.SetString(widgetsfix,years)</onfocus>
						<onfocus condition="!String.Contains(ListItem.Property(widgets),directors) + !String.Contains(ListItem.Property(widgets),genres) + !String.Contains(ListItem.Property(widgets),countries) + !String.Contains(ListItem.Property(widgets),studios) + !String.Contains(ListItem.Property(widgets),years)">Skin.Reset(widgetsfix)</onfocus>						
					</control>
					<control type="button">
						<include>invisible</include>
						<onfocus condition="Player.HasMedia + !Skin.HasSetting(home_nonowplayingpanel)">AlarmClock(playercontrols,ActivateWindow(playercontrols),0:08,true)</onfocus>
					</control>
					<control type="button">
						<include>invisible</include>
						<onfocus condition="Player.HasMedia + System.IdleTime() + !Skin.HasSetting(home_nonowplayingpanel)">CancelAlarm(playercontrols,true)</onfocus>
					</control>
					<include content="mainmenucustom_colorfocus" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="FF007399" />
						<param name="animation" value="FF007399" />
						<param name="visible" value="![String.IsEmpty(ListItem.Property(master)) | !String.IsEmpty(ListItem.Property(visible))]" />
					</include>
					<include content="mainmenucustom_colorfocus" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="FFB20000" />
						<param name="visible" value="[String.IsEmpty(ListItem.Property(master)) | !String.IsEmpty(ListItem.Property(visible))]" />
					</include>
					<include content="mainmenucustom_colorfocus" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="FFC4941D" />
						<param name="visible" value="String.IsEmpty(ListItem.Property(master))" />
					</include>
					<include content="mainmenucustom_colorfocus" condition="Window.IsVisible(1157)">
						<param name="colordiffuse" value="FF4C9900" />
						<param name="visible" value="String.IsEqual(ListItem.Property(master),virtual)" />
					</include>
					<include content="mainmenucustom_fontfocus" condition="Window.IsVisible(1157)">
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font1)">
						<param name="font" value="font_menu1" />
						<param name="top" value="3" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font2)">
						<param name="font" value="font_menu2" />
						<param name="top" value="1" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font3)">
						<param name="font" value="font_menu3" />
						<param name="top" value="3" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font4)">
						<param name="font" value="font_menu4" />
						<param name="top" value="1" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font5)">
						<param name="font" value="font_menu5" />
						<param name="top" value="8" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font6)">
						<param name="font" value="font_menu6" />
						<param name="top" value="0" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font7)">
						<param name="font" value="font_menu7" />
						<param name="top" value="8" />
					</include>
					<include content="mainmenu_fontfocus" condition="Window.IsVisible(home) + String.IsEqual(skin.string(stylefont),font8)">
						<param name="font" value="font_menu8" />
						<param name="top" value="-2" />
					</include>
				</focusedlayout>
				<content>
					<include condition="Window.IsVisible(1157)">mainmenu_presets</include>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="1" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="2" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="3" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="4" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="5" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="6" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="7" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="8" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="9" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="10" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="11" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="12" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="13" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="14" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="15" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="16" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="17" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="18" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="19" />
						</include>
					</item>
					<item>
						<include content="mainmenu_items">
							<param name="item" value="20" />
						</include>
					</item>
				</content>
			</control>
		</definition>
	</include>
	<!-- ########## BACKGROUNS/DIMENSOES ########## -->
	<include name="media_backgrounds">
		<control type="videowindow">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<visible>Player.HasVideo + Skin.HasSetting(background_live)</visible>
		</control>
		<control type="multiimage">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<timeperimage>6000</timeperimage>
			<randomize>true</randomize>
			<fadetime>commonfadetime</fadetime>
			<include condition="Skin.HasSetting(keepaspect)">KeepAspect</include>
			<imagepath background="true">$INFO[skin.string(backgroundcopy)]</imagepath>
			<include>animation_panscan</include>
			<visible>[!Player.HasVideo | Player.HasVideo + !Skin.HasSetting(background_live)] + $PARAM[visible]</visible>
		</control>
		<control type="multiimage">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<timeperimage>6000</timeperimage>
			<randomize>true</randomize>
			<fadetime>commonfadetime</fadetime>
			<include condition="Skin.HasSetting(keepaspect)">KeepAspect</include>
			<imagepath background="true">$VAR[media_fanart]</imagepath>
			<include>animation_panscan</include>
			<visible>[!Player.HasVideo | Player.HasVideo + !Skin.HasSetting(background_live)] + $PARAM[visible]</visible>			
		</control>
		<control type="multiimage">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<timeperimage>6000</timeperimage>
			<randomize>true</randomize>
			<fadetime>commonfadetime</fadetime>
			<include condition="Skin.HasSetting(keepaspect)">KeepAspect</include>
			<imagepath background="true">$INFO[Window(home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</imagepath>
			<animation effect="fade" end="100" time="200" delay="3000">Visible</animation>
			<include>animation_panscan</include>
			<visible>[!Player.HasVideo | Player.HasVideo + !Skin.HasSetting(background_live)] + $PARAM[visible] + ![String.IsEqual(ListItem.Label,..) | String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.ExtraFanArt))] + [Window.IsActive(videos) + String.Contains(skin.string(videofanart),extra) | Window.IsActive(music) + String.Contains(skin.string(musicfanart),extra)]</visible>
		</control>	
		<control type="multiimage">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<timeperimage>6000</timeperimage>
			<randomize>true</randomize>
			<fadetime>commonfadetime</fadetime>
			<include condition="Skin.HasSetting(keepaspect)">KeepAspect</include>
			<imagepath background="true">special://skin/backgrounds/extras/curtains.jpg</imagepath>
			<include>animation_panscan</include>
			<visible>[!Player.HasVideo | Player.HasVideo + !Skin.HasSetting(background_live)] + $PARAM[visible] + [Window.IsActive(videos) + String.IsEqual(skin.string(videofanart),curtains) | Window.IsActive(music) + String.IsEqual(skin.string(musicfanart),curtains)]</visible>
		</control>		
	</include>
	<!-- ########## SELETOR DE ESTOJOS ########## -->
	<include name="case_selector">
		<definition>
			<control type="group">
				<orientation>horizontal</orientation>
				<width>300</width>
				<height>900</height>
				<control type="button" id="$PARAM[id]">
					<left>0</left>
					<top>0</top>
					<onleft>$PARAM[left]</onleft>
					<onright>$PARAM[right]</onright>
					<width>285</width>
					<height>405</height>
					<onup>10025</onup>
					<onup>Skin.SetString(custom_codec,$PARAM[codec])</onup>
					<ondown>9100</ondown>
					<texturefocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_default.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_default.png</texturenofocus>
					<onclick>RunScript(script.skin.helper.colorpicker,skinstring=$PARAM[colorcase])</onclick>
					<enable>System.HasAddon(script.skin.helper.colorpicker)</enable>
					<include>animation_visiblechange</include>
					<visible>String.IsEqual(skin.string(videocasestyle),default)</visible>
				</control>
				<control type="button" id="$PARAM[id]">
					<left>0</left>
					<top>0</top>
					<onleft>$PARAM[left]</onleft>
					<onright>$PARAM[right]</onright>
					<width>285</width>
					<height>405</height>
					<onup>10025</onup>
					<onup>Skin.SetString(custom_codec,$PARAM[codec])</onup>
					<ondown>9100</ondown>
					<texturefocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_glass.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_glass.png</texturenofocus>
					<onclick>RunScript(script.skin.helper.colorpicker,skinstring=$PARAM[case])</onclick>
					<enable>System.HasAddon(script.skin.helper.colorpicker)</enable>
					<include>animation_visiblechange</include>
					<visible>String.IsEqual(skin.string(videocasestyle),glass)</visible>
				</control>
				<control type="button" id="$PARAM[id]">
					<left>0</left>
					<top>0</top>
					<onleft>$PARAM[left]</onleft>
					<onright>$PARAM[right]</onright>
					<width>285</width>
					<height>405</height>
					<onup>10025</onup>
					<onup>Skin.SetString(custom_codec,$PARAM[codec])</onup>
					<ondown>9100</ondown>
					<texturefocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_gloss.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[skin.string($PARAM[colorcase])]">thumb_box_gloss.png</texturenofocus>
					<onclick>RunScript(script.skin.helper.colorpicker,skinstring=$PARAM[case])</onclick>
					<enable>System.HasAddon(script.skin.helper.colorpicker)</enable>
					<include>animation_visiblechange</include>
					<visible>String.IsEqual(skin.string(videocasestyle),gloss)</visible>
				</control>
				<!-- Codec -->
				<control type="image">
					<include>CaseCodec</include>
					<texture>$PARAM[codecimage]</texture>
					<colordiffuse>$INFO[skin.string(colorcodeccase)]</colordiffuse>
				</control>
			</control>
		</definition>
	</include>
	<!-- ########## SELETOR DE ESTRELAS ########## -->
	<include name="starsselector_item">
		<definition>
			<control type="button" id="$PARAM[id]">
				<onup>$PARAM[up]</onup>
				<ondown>$PARAM[down]</ondown>
				<onleft>9100</onleft>
				<label>$PARAM[label]</label>
				<onclick>RunScript(script.skin.helper.colorpicker,skinstring=colorratingstars$PARAM[set])</onclick>
				<onright>RunScript(script.skin.helper.colorpicker,skinstring=colorratingstars$PARAM[set])</onright>
				<enable>System.HasAddon(script.skin.helper.colorpicker)</enable>
			</control>
			<control type="image">
				<top>10</top>
				<left>170</left>
				<width>525</width>
				<height>40</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="150">Hidden</animation>
				<texture>$VAR[styleratingstars,,$PARAM[starnofocus].png]</texture>
				<colordiffuse>$INFO[skin.string(colorratingstars$PARAM[set])]</colordiffuse>
				<visible>!Control.HasFocus($PARAM[id])</visible>
			</control>
			<control type="image">
				<top>10</top>
				<left>170</left>
				<width>525</width>
				<height>40</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="150">Hidden</animation>
				<texture>$VAR[styleratingstars,,$PARAM[starfocus].png]</texture>
				<colordiffuse>$INFO[skin.string(colorratingstars$PARAM[set])]</colordiffuse>
				<visible>Control.HasFocus($PARAM[id])</visible>
			</control>
		</definition>
	</include>
	<!-- ########## DISCOS ########## -->
	<include name="mediainfo_disc">
		<definition>
			<control type="group">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<animation type="Visible">
				<effect type="slide" start="0,0" end="$PARAM[slidedisc1],$PARAM[slidedisc2]" time="800" delay="2000" tween="sine" easing="inout" />
				<effect type="fade" start="0" end="100" time="800" delay="2000" />
			</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="$PARAM[hiddenfade]" />
			</animation>
			<animation effect="slide" start="0,0" end="$PARAM[slidecolumn],0" time="0" tween="sine" easing="inout" condition="$PARAM[slidecolumncondition]">conditional</animation>
			<animation effect="fade" end="100" time="500">WindowOpen</animation>
			<animation effect="fade" end="100" time="200">Visible</animation>
			<visible>$PARAM[visible]</visible>
				<control type="image">					
					<left>0</left>
					<top>0</top>
					<width>$PARAM[size]</width>
					<height>$PARAM[size]</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture diffuse="cdart_diffuse.png" background="true">$PARAM[disclayout]</texture>
					<include>animation_cdart</include>
				</control>
				<control type="image">					
					<left>0</left>
					<top>0</top>
					<width>$PARAM[size]</width>
					<height>$PARAM[size]</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture diffuse="cdart_diffuse.png" background="true">$PARAM[discart]</texture>
					<include>animation_cdart</include>
				</control>
			</control>
		</definition>
	</include>
	<!-- ########## DISCOS PARA CONJUNTOS ########## -->
	<include name="discart_items">
		<definition>
			<control type="image">
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="center" aligny="center">keep</aspectratio>				
				<texture diffuse="cdart_diffuse.png" background="true">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.DiscArt)]</texture>
				<include>animation_viewscdart</include>
				<visible>![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.DiscArt)) | String.IsEqual(ListItem.Label,..)]</visible>
			</control>
		</definition>
	</include>
	<!-- ########## ITEMS DA VISTA SETS ########## -->
	<include name="viewsets_items">
		<definition>
			<label>$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Label)]</label>
			<icon>$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.Poster)]</icon>
			<property name="Disc">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.DiscArt)]</property>
			<property name="Fanart">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.FanArt)]</property>
			<property name="Plot">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Plot)]</property>
			<property name="Year">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Year)]</property>
			<property name="Duration">$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].Duration)]</property>
			<onclick>RunScript(service.skin.widgets,movieid=$INFO[Window(home).Property(SkinHelper.ListItem.$PARAM[item].DBID)])</onclick>
			<visible>![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.$PARAM[item].Art.Poster)) | String.IsEqual(ListItem.Label,..)]</visible>
		</definition>
	</include>
	<!-- ########## LOGO E CLEARART ########## -->
	<include name="logoandclearart_items">
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + Window.IsActive(programs) + !Skin.HasSetting(noartprograms)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$VAR[videologoandclearart]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + Window.IsActive(videos) + !Skin.HasSetting(noartvideo)</visible>
			</control>
			<control type="image" id="49995">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$INFO[skin.string(CustomMusicLogoPath)]$INFO[ListItem.Artist,,/clearart.png]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + Skin.HasSetting(prefermusicclearart) + Window.IsActive(music) + !Skin.HasSetting(noartmusic)</visible>
			</control>
			<control type="image" id="49996">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$INFO[Window(home).Property(SkinHelper.ListItem.Art.ClearArt)]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + Skin.HasSetting(prefermusicclearart) + String.IsEmpty(Control.GetLabel(49995)) + Window.IsActive(music) + !Skin.HasSetting(noartmusic)</visible>
			</control>
			<control type="image" id="49997">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$INFO[skin.string(CustomMusicLogoPath)]$INFO[ListItem.Artist,,/logo.png]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + [!Skin.HasSetting(prefermusicclearart) + String.IsEmpty(Control.GetLabel(49995)) + String.IsEmpty(Control.GetLabel(49996))] + Window.IsActive(music) + !Skin.HasSetting(noartmusic)</visible>
			</control>
			<control type="image" id="49998">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>commonfadetime</fadetime>
				<aspectratio align="right" aligny="bottom">keep</aspectratio>	
				<texture background="true">$INFO[Window(home).Property(SkinHelper.ListItem.Art.ClearLogo)]</texture>									
				<visible>!String.IsEqual(ListItem.Label,..) + [!Skin.HasSetting(prefermusicclearart) + String.IsEmpty(Control.GetLabel(49995)) + String.IsEmpty(Control.GetLabel(49996)) + String.IsEmpty(Control.GetLabel(49997))] + Window.IsActive(music) + !Skin.HasSetting(noartmusic)</visible>
			</control>
		</definition>
	</include>
	<!-- ##########  MENU VIRTUAL - FONTE ########## -->
	<include name="mainmenuvirtual_font">
		<definition>
			<control type="label">
				<left>0</left>
				<top>$PARAM[top]</top>
				<width>489</width>
				<height>72</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<font>$PARAM[font]</font>
				<textcolor>$INFO[skin.string(colorfont)]</textcolor>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<include name="mainmenuvirtual_fontfocus">
		<definition>
			<control type="label">
				<left>62</left>
				<top>$PARAM[top]</top>
				<width>489</width>
				<height>72</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<font>$PARAM[font]</font>
				<textcolor>$INFO[skin.string(colorfont)]</textcolor>
				<animation effect="zoom" center="275,40" start="100" end="130" time="400" tween="cubic" easing="out" condition="true">conditional</animation>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<!-- ########## PROXIMAS FAIXAS ########## -->
	<include name="nexttracks_items">
		<definition>
			<label>$PARAM[track]: $INFO[MusicPlayer.offset($PARAM[track]).Title]</label>
			<label2>$INFO[MusicPlayer.offset($PARAM[track]).Artist]</label2>
			<icon>$INFO[MusicPlayer.offset($PARAM[track]).Cover]</icon>
			<property name="Details">$INFO[MusicPlayer.offset($PARAM[track]).Album][CR]$INFO[MusicPlayer.offset($PARAM[track]).Duration]</property>
			<onclick>Playlist.PlayOffset($PARAM[track])</onclick>
			<visible>!String.IsEmpty(MusicPlayer.offset($PARAM[track]).Artist)</visible>
		</definition>
	</include>
	<include name="nexttracks_content">
		<content>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="1" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="2" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="3" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="4" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="5" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="6" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="7" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="8" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="9" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="10" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="11" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="12" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="13" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="14" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="15" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="16" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="17" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="18" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="19" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="20" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="21" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="22" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="23" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="24" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="25" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="26" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="27" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="28" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="29" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="30" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="31" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="32" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="33" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="34" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="35" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="36" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="37" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="38" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="39" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="40" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="41" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="42" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="43" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="44" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="45" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="46" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="47" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="48" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="49" />
				</include>
			</item>
			<item>
				<include content="nexttracks_items">
					<param name="track" value="50" />
				</include>
			</item>
		</content>
	</include>
	<!-- ########## MINI WEATHER ########## -->
	<include name="miniweather_items">
		<definition>
			<control type="group">
				<width>79</width>
				<height>118</height>
				<control type="label">
					<left>5</left>
					<top>5</top>
					<width>87</width>
					<height>30</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[Window(Weather).Property(Daily.$PARAM[item].ShortDay)]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
				</control>
				<control type="image">
					<left>24</left>
					<top>54</top>
					<width>50</width>
					<height>50</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$VAR[weathericons_path]$INFO[Window(Weather).Property(Daily.$PARAM[item].OutlookIcon)]</texture>
					<animation effect="fade" time="250">Visible</animation>
					<animation effect="fade" time="50">Hidden</animation>
					<visible>![Skin.HasSetting(resource.images.weathericons.multi) | String.IsEmpty(skin.string(resource.images.weathericons.path))]</visible>
				</control>
				<control type="multiimage">
					<left>24</left>
					<top>45</top>
					<width>50</width>
					<height>50</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<imagepath>$VAR[weathericons_path]$INFO[Window(Weather).Property(Daily.$PARAM[item].FanartCode)]</imagepath>
					<timeperimage>75</timeperimage>
					<randomize>false</randomize>
					<fadetime>1</fadetime>
					<animation effect="fade" time="250">Visible</animation>
					<animation effect="fade" time="50">Hidden</animation>
					<visible>Skin.HasSetting(resource.images.weathericons.multi) | String.IsEmpty(skin.string(resource.images.weathericons.path))</visible>
				</control>
			</control>
		</definition>
	</include>
	<!-- ########## WIDGETS ########## -->
	<include name="widgets_selector_default">
		<definition>
			<icon>$PARAM[icon]</icon>
			<label>$PARAM[label]</label>
			<onclick condition="$PARAM[condition]">InstallAddon($PARAM[addon])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type,$PARAM[type])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort,$PARAM[sort])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order,$PARAM[order])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets,$PARAM[widgets])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus,$PARAM[label])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort,$PARAM[sortstatus])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.Reset($INFO[skin.string(menulabel)].fastchange)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type$INFO[skin.string(fastchange)],$PARAM[type])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort$INFO[skin.string(fastchange)],$PARAM[sort])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order$INFO[skin.string(fastchange)],$PARAM[order])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets$INFO[skin.string(fastchange)],$PARAM[widgets])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus$INFO[skin.string(fastchange)],$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort$INFO[skin.string(fastchange)],$PARAM[sortstatus])</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">Skin.SetString(fastchange,2)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">AlarmClock(fastchangealert,Notification(Item 1 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">Skin.SetString(fastchange,3)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">AlarmClock(fastchangealert,Notification(Item 2 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.SetString($INFO[skin.string(menulabel)].fastchange,1)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangealert,Notification(Item 3 - $PARAM[label],$LOCALIZE[31239]),0:00,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangestep,Close,0:01,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangedone,SetFocus(8009),0:02,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.Reset(fastchange_mode)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Close</onclick>
			<visible>$PARAM[visible]</visible>
		</definition>
	</include>
	<include name="widgets_selector_playlist">
		<definition>
			<icon>$PARAM[icon]</icon>
			<label>$PARAM[label]</label>
			<onclick condition="!System.HasAddon(script.randomandlastitems)">InstallAddon(script.randomandlastitems)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type,$PARAM[type])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort,dateadded)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order,descending)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets,$PARAM[playlist]$PARAM[item].title)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus,$PARAM[label])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort,$LOCALIZE[552])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu$PARAM[item].path)],property=playlist$PARAM[item])</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type$INFO[skin.string(fastchange)],$PARAM[type])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort$INFO[skin.string(fastchange)],dateadded)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order$INFO[skin.string(fastchange)],descending)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets$INFO[skin.string(fastchange)],$PARAM[playlist]$PARAM[item].title)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus$INFO[skin.string(fastchange)],$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort$INFO[skin.string(fastchange)],$PARAM[sortstatus])</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">Skin.SetString(fastchange,2)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">AlarmClock(fastchangealert,Notification(Item 1 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">Skin.SetString(fastchange,3)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">AlarmClock(fastchangealert,Notification(Item 2 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.SetString($INFO[skin.string(menulabel)].fastchange,1)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangealert,Notification(Item 3 - $PARAM[label],Tudo pronto!),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangestep,Close,0:01,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangedone,SetFocus(8009),0:02,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.Reset(fastchange_mode)</onclick>	
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Close</onclick>
			<visible>String.StartsWith(skin.string(menu$PARAM[item].master),$PARAM[playlist])</visible>
		</definition>
	</include>
	<include name="widgets_selector_node">
		<definition>
			<icon>$PARAM[icon]</icon>
			<label>$PARAM[label]</label>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type,$PARAM[type])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort,dateadded)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order,descending)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets,$PARAM[node]$PARAM[item])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus,$PARAM[label])</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort,$LOCALIZE[552])</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].type$INFO[skin.string(fastchange)],$PARAM[type])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].sort$INFO[skin.string(fastchange)],dateadded)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].order$INFO[skin.string(fastchange)],descending)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgets$INFO[skin.string(fastchange)],$PARAM[node]$PARAM[item])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus$INFO[skin.string(fastchange)],$PARAM[label])</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort$INFO[skin.string(fastchange)],$LOCALIZE[552])</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">Skin.SetString(fastchange,2)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),1)">AlarmClock(fastchangealert,Notification(Item 1 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">Skin.SetString(fastchange,3)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),2)">AlarmClock(fastchangealert,Notification(Item 2 - $PARAM[label],$LOCALIZE[31237]),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.SetString($INFO[skin.string(menulabel)].fastchange,1)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangealert,Notification(Item 3 - $PARAM[label],Tudo pronto!),0:00,true)</onclick>			
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangestep,Close,0:01,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">AlarmClock(fastchangedone,SetFocus(8009),0:02,true)</onclick>
			<onclick condition="Skin.HasSetting(fastchange_mode) + String.IsEqual(skin.string(fastchange),3)">Skin.Reset(fastchange_mode)</onclick>
			<onclick condition="!Skin.HasSetting(fastchange_mode)">Close</onclick>
			<visible>String.StartsWith(skin.string(menu$PARAM[item].master),$PARAM[node])</visible>
		</definition>
	</include>
	<include name="widgets_selector_mymenu">
		<definition>
			<icon>$PARAM[icon]</icon>
			<label>$PARAM[label]</label>
			<onclick>Skin.SetString($INFO[skin.string(menulabel)].type,11)</onclick>
			<onclick>Skin.SetString($INFO[skin.string(menulabel)].widgets,mymenu$PARAM[item])</onclick>
			<onclick>Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus,$PARAM[label])</onclick>
			<onclick>Close</onclick>
			<visible>$PARAM[visible]</visible>
		</definition>
	</include>
	<include name="widgets_selector_sort">
		<definition>
			<label>$PARAM[label]</label>
			<onclick>Skin.SetString($INFO[skin.string(menulabel)].sort,$PARAM[action])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),2)">Skin.SetString($INFO[skin.string(menulabel)].sort1,$PARAM[action])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),3)">Skin.SetString($INFO[skin.string(menulabel)].sort2,$PARAM[action])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),1)">Skin.SetString($INFO[skin.string(menulabel)].sort3,$PARAM[action])</onclick>
			<onclick>Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort,$PARAM[label])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),2)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort1,$PARAM[label])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),3)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort2,$PARAM[label])</onclick>
			<onclick condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),1)">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort3,$PARAM[label])</onclick>
			<onclick>SetFocus(8008)</onclick>
			<visible>$PARAM[visible]</visible>
		</definition>
	</include>
	<!-- ########## TROCA RAPIDA ########## -->
	<include name="fastchange_menu">
		<definition>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].type,$INFO[Container(9000).ListItem.Property(type$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].sort,$INFO[Container(9000).ListItem.Property(sort$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].order,$INFO[Container(9000).ListItem.Property(order$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].widgets,$INFO[Container(9000).ListItem.Property(widgets$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatus,$INFO[Container(9000).ListItem.Property(widgetsstatus$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">Skin.SetString($INFO[skin.string(menulabel)].widgetsstatussort,$INFO[Container(9000).ListItem.Property(widgetsstatussort$PARAM[item])])</onfocus>
			<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(fastchange),$PARAM[item])">AlarmClock(fastchangestep,Skin.SetString($INFO[skin.string(menulabel)].fastchange,$PARAM[step]),0:01,true)</onfocus>	
		</definition>
	</include>
	<include name="fastchange_bar">
		<definition>
			<control type="group">
				<width>270</width>
				<control type="image">
					<left>432</left>
					<top>5</top>
					<width>30</width>
					<height>30</height>
					<aspectratio align="center" aligny="bottom">keep</aspectratio>
					<texture colordiffuse="$INFO[skin.string(colortext)]">$PARAM[texture]</texture>
					<animation effect="fade" start="20" end="100" time="600" pulse="true" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<left>475</left>
					<top>0</top>
					<width>200</width>
					<height>40</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$PARAM[label]</label>
					<font>font_button</font>
					<scroll>true</scroll>
				</control>
			</control>
		</definition>
	</include>
	<!-- ########## SUBWIDGETS ITENS ########## -->
	<include name="subwidgets_items">
		<definition>
			<label fallback="">$PARAM[label]</label>
			<icon></icon>
			<property name="type">$PARAM[type]</property>
			<property name="sort">$PARAM[sort]</property>
			<property name="order">$PARAM[order]</property>
			<property name="widgets">$PARAM[widgets]</property>
			<onclick>$PARAM[action]</onclick>
			<visible>$PARAM[visible]</visible>
		</definition>
	</include>
	<!-- ########## MENU M/OSD ########## -->
	<include name="osd_controls">
		<definition>
			<control type="$PARAM[type]" id="$PARAM[id]">
				<left>$PARAM[left]</left>
				<top>0</top>
				<width>60</width>
				<height>60</height>
				<onleft>$PARAM[onleft]</onleft>
				<onright>$PARAM[onright]</onright>
				<onup>888</onup>
				<ondown>Close</ondown>
				<onclick>$PARAM[action]</onclick>
				<onclick>$PARAM[action2]</onclick>
				<onclick>$PARAM[action3]</onclick>
				<label></label>
				<texturefocus>$PARAM[texture]</texturefocus>
				<texturenofocus>$PARAM[texture]</texturenofocus>
				<usealttexture>$PARAM[usealttexture]</usealttexture>
				<alttexturefocus>$PARAM[alttexture]</alttexturefocus>
				<alttexturenofocus>$PARAM[alttexture]</alttexturenofocus>
				<colordiffuse>FFF8F8F8</colordiffuse>
				<animation effect="fade" start="100" end="50" time="0" condition="!Control.Hasfocus($PARAM[id])">conditional</animation>
				<animation effect="fade" start="100" end="50" time="0" condition="$PARAM[fade]">conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="140" time="400" easing="out" tween="cubic" reversible="false">Focus</animation>
				<enable>$PARAM[enable]</enable>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<!-- ########## GERENCIADOR DE ADD-ONS ########## -->
	<include name="addons_manager">
		<definition>
			<control type="button" id="$PARAM[id]">
				<label>$PARAM[label]</label>
				<label2>$VAR[addon$PARAM[id].label]$INFO[System.AddonVersion($PARAM[addon])]</label2>				
				<onclick condition="!System.HasAddon($PARAM[addon])">InstallAddon($PARAM[addon])</onclick>
				<onclick condition="System.HasAddon($PARAM[addon])">Addon.OpenSettings($PARAM[addon])</onclick>
			</control>
		</definition>
	</include>	
	<!-- ########## ESTOJOS ########## -->
	<include name="views_videocase">
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcase3dbd)]">$VAR[videocase_style]</texture>				
				<visible>String.Contains(ListItem($PARAM[item]).Filenameandpath,.3dbd.) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.3d.)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcasebluray)]">$VAR[videocase_style]</texture>
				<visible>[String.Contains(ListItem($PARAM[item]).Filenameandpath,bluray) | String.Contains(ListItem($PARAM[item]).Filenameandpath,blu-ray) | String.Contains(ListItem($PARAM[item]).Filenameandpath,bdrip)] + ![String.Contains(ListItem($PARAM[item]).Filenameandpath,.3dbd.) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.3d.)]</visible>				
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcase4k)]">$VAR[videocase_style]</texture>
				<visible>String.Contains(ListItem($PARAM[item]).Filenameandpath,4k)</visible>
			</control>			
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcasewebtv)]">$VAR[videocase_style]</texture>
				<visible>String.Contains(ListItem($PARAM[item]).Filenameandpath,web)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcasehdtv)]">$VAR[videocase_style]</texture>
				<visible>String.Contains(ListItem($PARAM[item]).Filenameandpath,hdtv)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcasedvd)]">$VAR[videocase_style]</texture>
				<visible>String.Contains(ListItem($PARAM[item]).Filenameandpath,dvd) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.ifo,Right) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.iso,Right)</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcaseset)]">$VAR[videocase_style]</texture>
				<visible>ListItem($PARAM[item]).IsCollection</visible>
			</control>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="$PARAM[aligny]">stretch</aspectratio>
				<texture flipy="$PARAM[flipy]" diffuse="$PARAM[diffuse]" colordiffuse="$INFO[skin.string(colorcasedefault)]">$VAR[videocase_style]</texture>
				<visible>![String.Contains(ListItem($PARAM[item]).Filenameandpath,.3dbd.) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.3d.) | String.Contains(ListItem($PARAM[item]).Filenameandpath,bluray) | String.Contains(ListItem($PARAM[item]).Filenameandpath,blu-ray) | String.Contains(ListItem($PARAM[item]).Filenameandpath,bdrip) | String.Contains(ListItem($PARAM[item]).Filenameandpath,4k) | String.Contains(ListItem($PARAM[item]).Filenameandpath,web) | String.Contains(ListItem($PARAM[item]).Filenameandpath,hdtv) | String.Contains(ListItem($PARAM[item]).Filenameandpath,dvd) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.ifo,Right) | String.Contains(ListItem($PARAM[item]).Filenameandpath,.iso,Right) | ListItem($PARAM[item]).IsCollection]</visible>
			</control>
		</definition>
	</include>
	<!-- ########## SELETOR DAS VISTAS ########## -->
	<include name="viewsselector_item">
		<definition>
			<control type="radiobutton" id="192$PARAM[id]">
				<radioposx>1300</radioposx>
				<label>$PARAM[label]</label>
				<onclick>Skin.ToggleSetting($PARAM[view]_$PARAM[type])</onclick>
				<onclick condition="!Skin.HasSetting($PARAM[view]_$PARAM[type])">Skin.SetString(setview$PARAM[type],$PARAM[id])</onclick>
				<onclick condition="!Skin.HasSetting($PARAM[view]_$PARAM[type]) + Skin.HasSetting(clickactivateview_$PARAM[type])">back</onclick>
				<selected>Skin.HasSetting($PARAM[view]_$PARAM[type])</selected>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<!-- ########## VISTA PAREDE DIMMER ########## -->
	<include name="viewwall_dimmer">
		<definition>
			<animation effect="fade" start="100" end="$PARAM[dim]" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + $PARAM[condition]">conditional</animation>
		</definition>
	</include>
	<!-- ########## VISTA SHOWCASE ########## -->
	<include name="viewshowcase_poster">
		<definition>
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>animation_visiblechange</include>
			<control type="image">
				<left>74</left>
				<top>394</top>
				<width>260</width>
				<height>381</height>
				<aspectratio align="center" aligny="top">stretch</aspectratio>
				<colordiffuse>50ffffff</colordiffuse>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[poster$PARAM[item]]</texture>
			</control>
			<control type="image">
				<left>74</left>
				<top>12</top>
				<width>260</width>
				<height>381</height>
				<aspectratio align="center" aligny="bottom">stretch</aspectratio>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[poster$PARAM[item]]</texture>
			</control>
			<control type="image">
				<left>284</left>
				<top>9</top>
				<width>52</width>
				<height>52</height>
				<texture>$VAR[watched_style]</texture>
				<colordiffuse>$INFO[skin.string(colorwatched)]</colordiffuse>
				<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem($PARAM[item]).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>animation_visiblechange</include>
				<control type="image">
					<left>84</left>
					<top>400</top>
					<width>228</width>
					<height>318</height>
					<aspectratio align="center" aligny="top">scale</aspectratio>
					<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[poster$PARAM[item]]</texture>
				</control>
				<include content="views_videocase">	
					<param name="left" value="63" />
					<param name="top" value="369" />
					<param name="width" value="284" />
					<param name="height" value="390" />
					<param name="aligny" value="top" />
					<param name="flipy" value="true" />
					<param name="diffuse" value="thumb_box_reflect.png" />
					<param name="item" value="$PARAM[item]" />
				</include>
				<control type="image">
					<left>84</left>
					<top>64</top>
					<width>228</width>
					<height>318</height>
					<aspectratio align="center" aligny="bottom">stretch</aspectratio>
					<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster$PARAM[item]]</texture>
				</control>
				<control type="image">
					<left>261</left>
					<top>70</top>
					<width>52</width>
					<height>52</height>
					<texture>$VAR[watched_style]</texture>
					<colordiffuse>$INFO[skin.string(colorwatched)]</colordiffuse>
					<animation effect="slide" start="0,0" end="3,-16" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(flattenshowcase)">Conditional</animation>
					<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem($PARAM[item]).Overlay,OverlayWatched.png)</visible>
				</control>
				<include content="views_videocase">	
					<param name="left" value="63" />
					<param name="top" value="14" />
					<param name="width" value="284" />
					<param name="height" value="400" />
					<param name="aligny" value="bottom" />
					<param name="flipy" value="false" />
					<param name="diffuse" value="" />
					<param name="item" value="$PARAM[item]" />
				</include>
				<control type="image">
					<left>174</left>
					<top>21</top>
					<width>57</width>
					<height>57</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$VAR[videocodec$PARAM[item]]</texture>
				</control>	
			</control>			
		</definition>
	</include>	
	<!-- ########## ETIQUETAS DE MIDIA ########## -->
	<include name="mediaflags_common">
		<definition>
			<control type="image" id="$PARAM[flag_id]">
				<include>invisible</include>
				<texture>$PARAM[flag]</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>110</width>
				<height>66</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture colordiffuse="$INFO[skin.string(colorflags)]">$VAR[extras_path]flag_default.png</texture>
				<visible>String.IsEmpty(Control.GetLabel($PARAM[flag_id]))</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>110</width>
				<height>66</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture colordiffuse="$INFO[skin.string(colorflags)]">$PARAM[flag]</texture>
				<visible>!String.IsEmpty(Control.GetLabel($PARAM[flag_id]))</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>7</top>
				<width>1</width>
				<height>65</height>
				<texture>flagseparator.png</texture>
				<colordiffuse>$INFO[skin.string(colorflags)]</colordiffuse>
				<visible>$PARAM[separator]</visible>
			</control>						
		</definition>
	</include>	
</includes>