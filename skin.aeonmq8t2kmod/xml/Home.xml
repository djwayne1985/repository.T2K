<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- Aeon MQ 8 -->
	<defaultcontrol always="true">9000</defaultcontrol>
		<include condition="!String.IsEqual(skin.string(fix),fix4)">Quickfix</include>
		<onload condition="!String.IsEqual(skin.string(defaultsettings),0)">ActivateWindow(1163)</onload>
		<onload condition="Skin.HasSetting(reloadhome)">AlarmClock(reloadhome,ReloadSkin(),0:01,true)</onload>
		<onload condition="Skin.HasSetting(reloadhome)">Skin.Reset(reloadhome)</onload>		
		<onload condition="System.HasAddon(script.favourites)">RunScript(script.favourites)</onload>
		<onload condition="!String.IsEmpty(Weather.Plugin) + String.IsEmpty(skin.string(resource.images.weathericons.path))">InstallAddon(resource.images.weathericons.animated)</onload>
		<onload condition="[Library.HasContent(Movies) | Library.HasContent(TVShows) | Library.HasContent(MusicVideos)] + String.IsEmpty(skin.string(resource.images.studios.path))">InstallAddon(resource.images.studios.white)</onload>
		<onload condition="Library.HasContent(TVShows) + !System.HasAddon(service.upnext)">InstallAddon(service.upnext)</onload>
		<onload condition="Library.HasContent(Music) + String.IsEmpty(skin.string(resource.images.recordlabels.path))">InstallAddon(resource.images.recordlabels.white)</onload>
		<onload condition="!System.HasAddon(script.artistslideshow) + Player.HasAudio">InstallAddon(script.artistslideshow)</onload>
		<onload condition="System.HasAddon(script.artistslideshow) + Player.HasAudio">RunScript(script.artistslideshow)</onload>
		<onload condition="System.HasAddon(script.skin.helper.service)">SetProperty(SkinHelper.WidgetContainer,510,home)</onload>
		<onload condition="System.HasAddon(script.skin.helper.service) + !Skin.HasSetting(animatedposters_home)">Skin.Reset(SkinHelper.EnableAnimatedPosters)</onload>
		<onload condition="System.HasAddon(script.skin.helper.service) + Skin.HasSetting(animatedposters_home)">Skin.SetBool(SkinHelper.EnableAnimatedPosters)</onload>		
		<onload condition="System.HasAddon(script.skin.helper.service) + !Skin.HasSetting(firstload)">Skin.SetBool(SkinHelper.EnableExtraFanart)</onload>
		<onload condition="System.HasAddon(script.skin.helper.service) + !Skin.HasSetting(firstload)">Skin.SetBool(SkinHelper.EnableExtendedArt)</onload>
		<onload condition="System.HasAddon(script.skin.helper.service) + !Skin.HasSetting(firstload)">Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
		<onload condition="!Skin.HasSetting(firstload)">AlarmClock(firstload,Skin.SetBool(firstload),0:01,true)</onload>
		<onload condition="System.HasAddon(script.games.rom.collection.browser) + Skin.HasSetting(rcbgames)">RunScript(script.games.rom.collection.browser,limit=12)</onload>
		<onload condition="Skin.HasSetting(rcbgames)">Skin.Reset(rcbgames)</onload>
		<onload condition="Skin.HasSetting(kioskcode)">Skin.Reset(codestep)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu1.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu1.path)],property=playlist1)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu2.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu2.path)],property=playlist2)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu3.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu3.path)],property=playlist3)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu4.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu4.path)],property=playlist4)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu5.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu5.path)],property=playlist5)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu6.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu6.path)],property=playlist6)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu7.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu7.path)],property=playlist7)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu8.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu8.path)],property=playlist8)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu9.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu9.path)],property=playlist9)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu10.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu10.path)],property=playlist10)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu11.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu11.path)],property=playlist11)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu12.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu12.path)],property=playlist12)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu13.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu13.path)],property=playlist13)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu14.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu14.path)],property=playlist14)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu15.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu15.path)],property=playlist15)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu16.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu16.path)],property=playlist16)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu17.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu17.path)],property=playlist17)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu18.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu18.path)],property=playlist18)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu19.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu19.path)],property=playlist19)</onload>
		<onload condition="System.HasAddon(script.randomandlastitems) + String.Contains(skin.string(menu20.master),playlist)">RunScript(script.randomandlastitems,limit=1,playlist=$INFO[skin.string(menu20.path)],property=playlist20)</onload>
		<onload>Skin.Reset(playlists)</onload>
		<onload>Skin.Reset(backgroundcopy)</onload>
		<onload>Skin.Reset(submode)</onload>
		<onunload>Skin.Reset(submode)</onunload>
		<onunload condition="String.StartsWith(Container(9000).ListItem.Property(status),vplaylist) | String.StartsWith(Container(9000).ListItem.Property(status),aplaylist)">Skin.SetString(playlists,$INFO[Container(9000).ListItem.Property(status)])</onunload>
		<onunload>CancelAlarm(playercontrols,true)</onunload>
		<onunload>ClearProperty(SkinHelper.WidgetContainer,home)</onunload>	
	<controls>
		<!-- Controle estudio -->
		<control type="image" id="556">
			<include>invisible</include>
			<texture>$VAR[widgets_studio]</texture>
		</control>
		<!-- Controle mpaa -->
		<control type="image" id="557">
			<include>invisible</include>
			<texture>$VAR[widgets_mpaa]</texture>
		</control>
		<!-- Controle music codec -->
		<control type="image" id="559">
			<include>invisible</include>
			<texture>$VAR[widgets_musiccodec]</texture>
		</control>
		<!-- Controle resolucao -->
		<control type="image" id="560">
			<include>invisible</include>
			<texture>$VAR[resolution_path]$INFO[Container(510).ListItem.VideoResolution,,.png]</texture>
		</control>
		<!-- Controle aspecto -->
		<control type="image" id="561">
			<include>invisible</include>
			<texture>$VAR[aspectratio_path]$INFO[Container(510).ListItem.VideoAspect,,.png]</texture>
		</control>
		<!-- Controle audio codec -->
		<control type="image" id="562">
			<include>invisible</include>
			<texture>$VAR[widgets_audiocodec]</texture>
		</control>
		<!-- Controle canais de audio -->
		<control type="image" id="563">
			<include>invisible</include>
			<texture>$INFO[Container(510).ListItem.Property(AudioLanguage.1)]</texture>
		</control>
		<!-- Controle legenda -->
		<control type="image" id="564">
			<include>invisible</include>
			<texture>$INFO[Container(510).ListItem.Property(SubtitleLanguage.1)]</texture>
		</control>
		<!-- Controle gravadora -->
		<control type="image" id="565">
			<include>invisible</include>
			<texture>$VAR[recordlabels_path]$INFO[Container(510).ListItem.Property(Album_Label),,.png]</texture>
		</control>
		<!-- Widgets modo auto -->
		<control type="image" id="8000">
			<include>invisible</include>
			<animation effect="fade" start="0" end="100" time="150" delay="1000" condition="String.Contains(skin.string(widgets_seconds),1)">Visible</animation>
			<animation effect="fade" start="0" end="100" time="150" delay="2000" condition="String.Contains(skin.string(widgets_seconds),2)">Visible</animation>
			<animation effect="fade" start="0" end="100" time="150" delay="3000" condition="String.Contains(skin.string(widgets_seconds),3)">Visible</animation>
			<animation effect="fade" start="0" end="100" time="150" delay="4000" condition="String.Contains(skin.string(widgets_seconds),4)">Visible</animation>
			<animation effect="fade" start="0" end="100" time="150" delay="5000" condition="String.Contains(skin.string(widgets_seconds),5)">Visible</animation>
			<visible>![Container(9000).OnNext | Container(9000).OnPrevious]</visible>
		</control>
		<!-- Vai para widgets -->
		<control type="button" id="8001">
			<include>invisible</include>
			<onfocus>SetFocus(9000)</onfocus>
			<onfocus>Skin.SetString(backgroundcopy,$INFO[Container(9000).ListItem.Icon])</onfocus>
			<onfocus>Skin.SetString(menulabel,$INFO[Container(9000).ListItem.Property(name)])</onfocus>
			<onfocus condition="![String.IsEmpty(Container(9000).ListItem.Property(widgets)) | String.IsEmpty(Container(510).ListItem(1).Label)]">SetFocus(510)</onfocus>
			<onfocus condition="[String.IsEmpty(Container(9000).ListItem.Property(widgets)) | String.IsEmpty(Container(510).ListItem(1).Label)] + !Skin.HasSetting(kioskcode)">ActivateWindow(1171)</onfocus>
			<onfocus condition="[String.IsEmpty(Container(9000).ListItem.Property(widgets)) | String.IsEmpty(Container(510).ListItem(1).Label)] + Skin.HasSetting(kioskcode)">SetFocus(8011)</onfocus>
		</control>
		<!-- Vai para submenu via controles -->
		<control type="button" id="8002">
			<include>invisible</include>
			<onfocus>SetFocus(9000)</onfocus>			
			<onfocus>Skin.SetString(backgroundcopy,$INFO[Container(9000).ListItem.Icon])</onfocus>
			<onfocus>Skin.SetString(mainmenulabel,$INFO[Container(9000).ListItem.Label])</onfocus>
			<onfocus>Skin.SetString(submenu,$INFO[Container(9000).ListItem.Property(submenu)])</onfocus>
			<onfocus condition="Player.HasMedia">SetFocus(600)</onfocus>
			<onfocus condition="!Player.HasMedia + $EXP[SubWidgetsControl]">SetFocus(9001)</onfocus>
			<onfocus condition="![Player.HasMedia | $EXP[SubWidgetsControl]]">Skin.SetBool(submode)</onfocus>
			<onfocus condition="![Player.HasMedia | $EXP[SubWidgetsControl] | String.IsEmpty(Container(9000).ListItem.Property(submenu))]">ActivateWindow(1101)</onfocus>
			<onfocus condition="![Player.HasMedia | $EXP[SubWidgetsControl] | Skin.HasSetting(nosmartsub)] + String.IsEmpty(Container(9000).ListItem.Property(submenu))">ActivateWindow(1165)</onfocus>
		</control>
		<!-- Vai para submenu desde os controles -->
		<control type="button" id="8003">
			<include>invisible</include>
			<onleft>SetFocus(9000)</onleft>
			<onright>SetFocus(9000)</onright>
			<onup>SetFocus(9000)</onup>
			<ondown>SetFocus(9000)</ondown>
			<onfocus>Skin.SetString(backgroundcopy,$INFO[Container(9000).ListItem.Icon])</onfocus>
			<onfocus>Skin.SetString(mainmenulabel,$INFO[Container(9000).ListItem.Label])</onfocus>
			<onfocus>Skin.SetString(submenu,$INFO[Container(9000).ListItem.Property(submenu)])</onfocus>
			<onfocus condition="$EXP[SubWidgetsControl]">SetFocus(9001)</onfocus>
			<onfocus condition="!$EXP[SubWidgetsControl]">Skin.SetBool(submode)</onfocus>
			<onfocus condition="![$EXP[SubWidgetsControl] | String.IsEmpty(Container(9000).ListItem.Property(submenu))]">ActivateWindow(1101)</onfocus>
			<onfocus condition="![$EXP[SubWidgetsControl] | Skin.HasSetting(nosmartsub)] + String.IsEmpty(Container(9000).ListItem.Property(submenu))">ActivateWindow(1165)</onfocus>
		</control>
		<!-- Vai para submenu via subwidgets -->
		<control type="button" id="8004">
			<include>invisible</include>
			<onfocus>SetFocus(9000)</onfocus>			
			<onfocus>Skin.SetString(backgroundcopy,$INFO[Container(9000).ListItem.Icon])</onfocus>
			<onfocus>Skin.SetString(mainmenulabel,$INFO[Container(9000).ListItem.Label])</onfocus>
			<onfocus>Skin.SetString(submenu,$INFO[Container(9000).ListItem.Property(submenu)])</onfocus>
			<onfocus>Skin.SetBool(submode)</onfocus>
			<onfocus condition="!String.IsEmpty(Container(9000).ListItem.Property(submenu))">ActivateWindow(1101)</onfocus>
			<onfocus condition="!Skin.HasSetting(nosmartsub) + String.IsEmpty(Container(9000).ListItem.Property(submenu))">ActivateWindow(1165)</onfocus>
		</control>
		<!-- Esconde colecao para ver fanart -->
		<control type="button" id="8005">
			<include>invisible</include>
			<onleft>SetFocus(510)</onleft>
			<onright>SetFocus(510)</onright>
			<onup>SetFocus(510)</onup>
			<ondown>SetFocus(510)</ondown>
		</control>
		<!-- Controle do disco/em progresso dos wigets -->
		<control type="button" id="8006">
			<include>invisible</include>
			<animation effect="fade" start="0" end="100" time="150" delay="500" condition="true">Visible</animation>
			<visible>![Container(510).OnNext | Container(510).OnPrevious]</visible>
		</control>
		<!-- Controle delay do estatus da livraria -->
		<control type="button" id="8007">
			<include>invisible</include>
			<animation effect="fade" start="0" end="100" time="150" delay="400" condition="true">Visible</animation>
			<visible>![Container(9000).OnNext | Container(9000).OnPrevious | Container(9001).OnNext | Container(9001).OnPrevious]</visible>
		</control>
		<!-- Para recarregar a lista de widgets -->
		<control type="button" id="8008">
			<include>invisible</include>
			<onfocus>Skin.SetString(mainmenulabel,$LOCALIZE[31464])</onfocus>
			<onfocus>ActivateWindow(1172)</onfocus>
			<onfocus>Skin.SetBool(submode)</onfocus>
		</control>		
		<!-- Ativador do fast change -->
		<control type="button" id="8009">
			<include>invisible</include>
			<onfocus>SetFocus(8010)</onfocus>
			<include content="fastchange_menu">
				<param name="item" value="1" />
				<param name="step" value="2" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(fastchange),1)" />	
			</include>
			<include content="fastchange_menu">
				<param name="item" value="2" />
				<param name="step" value="3" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(fastchange),2)" />	
			</include>
			<include content="fastchange_menu">
				<param name="item" value="3" />
				<param name="step" value="1" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(fastchange),3)" />	
			</include>
		</control>
		<!-- Barra do fast change -->
		<control type="button" id="8010">
			<include>invisible</include>
			<onup>SetFocus(9000)</onup>
			<ondown>SetFocus(8009)</ondown>
			<onleft>SetFocus(9000)</onleft>
			<onright>SetFocus(510)</onright>
		</control>
		<control type="button" id="8011">
			<include>invisible</include>
			<onfocus condition="!String.IsEqual(skin.string(codestep),step3)">ActivateWindow(1151)</onfocus>
			<onfocus condition="String.IsEqual(skin.string(codestep),step3)">ActivateWindow(1171)</onfocus>
		</control>
		
		<!-- Fundos do menu principal -->
		<control type="multiimage">			
			<include>homebackgroundspecs_multi</include>
			<imagepath background="true">$INFO[Container(9000).ListItem.Icon]</imagepath>
		</control>
		<!-- Extra Fanart em reproducao audio -->
		<control type="multiimage">
			<include>invisible</include>
			<imagepath background="true">$INFO[skin.string(CustomMusicLogoPath)]$INFO[MusicPlayer.Artist,,/extrafanart/]</imagepath>
			<visible>Player.HasAudio + System.IdleTime(2)</visible>
		</control>
		<!-- Extra Fanart em reproducao audio -->
		<control type="image">
			<include>homebackgroundspecs_single</include>
			<include>animation_fade</include>
			<texture background="true">$INFO[MusicPlayer.Property(Fanart_Image)]</texture>
			<visible>Player.HasAudio + System.IdleTime(2)</visible>
		</control>
		<!-- Extra Fanart em reproducao video -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>			
			<include>animation_fade</include>
			<imagepath background="true">$INFO[Player.FolderPath]extrafanart/</imagepath>
			<visible>Player.HasVideo + System.IdleTime(2)</visible>
		</control>
		<!-- Extra Fanart em reproducao video -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>
			<include>animation_fade</include>
			<imagepath background="true">$INFO[Player.FolderPath,,../extrafanart/]</imagepath>
			<visible>Player.HasVideo + System.IdleTime(2)</visible>
		</control>
		<!-- Fundos do clima sazonal -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>
			<include>animation_visiblechange</include>
			<imagepath background="true">$VAR[weatherfanart_season]</imagepath>
			<visible>String.IsEqual(Container(9000).ListItem.Property(master),weather) + String.IsEmpty(Container(9000).ListItem.Thumb)</visible>
		</control>
		<!-- Fundos do clima condicional -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>
			<include>animation_visiblechange</include>
			<imagepath background="true">$VAR[weatherfanart_condition]</imagepath>
			<visible>String.IsEqual(Container(9000).ListItem.Property(master),weather) + Skin.HasSetting(weatherfanart.conditional)</visible>
		</control>
		<!-- Fanart dos widgets unico -->
		<control type="image">
			<include>homebackgroundspecs_single</include>
			<include>animation_fade</include>
			<texture background="true">$VAR[widgets_fanart]</texture>
			<visible>!ControlGroup(550).HasFocus + [Control.HasFocus(500) | Control.HasFocus(510) | ControlGroup(512).HasFocus + !Control.HasFocus(519) | Control.HasFocus(8005)] + $EXP[MyMenuControl]</visible>
		</control>
		<!-- Fanart dos widgets multiplos -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>
			<include>animation_fade</include>
			<imagepath background="true">$VAR[widgets_fanart]</imagepath>
			<visible>!ControlGroup(550).HasFocus + [Control.HasFocus(500) | Control.HasFocus(510) | ControlGroup(512).HasFocus + !Control.HasFocus(519) | Control.HasFocus(8005)] + !$EXP[MyMenuControl]</visible>
		</control>
		<!-- Fanart dos subwidgets unico -->
		<control type="image">
			<include>homebackgroundspecs_single</include>
			<include>animation_fade</include>
			<texture background="true">$VAR[subwidgets_fanart]</texture>
			<visible>ControlGroup(550).HasFocus + Control.HasFocus(510)</visible>
		</control>
		<!-- Fanart dos subwidgets multiplos -->
		<control type="multiimage">
			<include>homebackgroundspecs_multi</include>
			<include>animation_fade</include>
			<imagepath background="true">$VAR[subwidgets_fanart]</imagepath>
			<visible>ControlGroup(550).HasFocus + Control.HasFocus(510)</visible>
		</control>
		<!-- Fundo escuro para quando tem foco no elenco -->
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>1920</width>
			<height>1080</height>
			<texture>black.png</texture>
			<colordiffuse>A4303030</colordiffuse>
			<animation effect="fade" start="0" end="80" time="200">Visible</animation>
			<animation effect="fade" start="100" end="0" time="400">Hidden</animation>
			<visible>Control.HasFocus(500)</visible>
		</control>
		<include condition="Skin.HasSetting(homevisvideo) | Skin.HasSetting(homevisaudio)">background_live</include>
		<!-- Grupo da janela home -->
		<control type="group">
			<include>animation_windowhome</include>
			<animation effect="fade" start="100" end="0" time="0" condition="Control.HasFocus(8005)">conditional</animation>
			<animation effect="fade" start="0" end="100" time="100" condition="!Control.HasFocus(8005)">conditional</animation>
			<!-- Imagem da composicao -->
			<control type="multiimage">
				<left>0</left>
				<top>680</top>
				<width>1920</width>
				<height>400</height>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),5000)">animation_timer1</include>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),10000)">animation_timer2</include>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),30000)">animation_timer3</include>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),60000)">animation_timer4</include>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),600000)">animation_timer5</include>
				<include condition="String.IsEqual(skin.string(backgroundhome_seconds),3600000)">animation_timer6</include>
				<randomize>true</randomize>
				<include>animation_fade</include>
				<fadetime>commonfadetime</fadetime>
				<imagepath fallback="blanc.png" diffuse="shadow_mask.png" background="true">$VAR[mainmenu_composition]</imagepath>
				<colordiffuse>$VAR[mainmenu_compositioncolor]</colordiffuse>
				<visible>Control.HasFocus(9000) + [Skin.HasSetting(compositionglobal) + !String.IsEmpty(skin.string(global.composition)) | !Skin.HasSetting(compositionglobal) + !String.IsEmpty(Container(9000).ListItem.Property(composition))]</visible>
			</control>
			<!-- Fundo base dos widgets -->
			<control type="image">
				<left>0</left>
				<top>525</top>
				<width>1920</width>
				<height>555</height>
				<texture diffuse="shadow_mask.png">$VAR[texture_base]</texture>
				<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
				<animation effect="fade" end="75" condition="true">Conditional</animation>
			</control>
			<control type="group">
			<visible>Control.HasFocus(510) + !ControlGroup(550).HasFocus</visible>
				<!-- discart -->
				<include content="mediainfo_disc">	
					<param name="left" value="50" />
					<param name="top" value="240" />
					<param name="size" value="300" />
					<param name="slidedisc1" value="225" />
					<param name="slidedisc2" value="0" />
					<param name="slidecolumn" value="0" />
					<param name="slidecolumncondition" value="0" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="0" />
					<param name="visible" value="[String.IsEqual(Container(9000).ListItem.Property(type),1) | String.IsEqual(Container(9000).ListItem.Property(type),6)] + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))] + System.IdleTime(1)" />
				</include>
				<include content="mediainfo_disc">	
					<param name="left" value="70" />
					<param name="top" value="370" />
					<param name="size" value="345" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-145" />
					<param name="slidecolumn" value="0" />
					<param name="slidecolumncondition" value="0" />
					<param name="disclayout" value="$VAR[audiodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="0" />
					<param name="visible" value="[String.IsEqual(Container(9000).ListItem.Property(type),4) | String.IsEqual(Container(9000).ListItem.Property(type),7)] + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))] + System.IdleTime(1)" />
				</include>
				<!-- clearlogo e clearart -->
				<control type="image">
					<left>1580</left>
					<top>340</top>
					<width>250</width>
					<height>150</height>
					<fadetime>commonfadetime</fadetime>
					<texture background="true">$VAR[logoandclearart]</texture>
					<aspectratio align="right" aligny="bottom">keep</aspectratio>						
				</control>
			</control>
			<!-- Por database -->
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="1" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="2" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="3" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="4" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="5" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="6" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="7" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="8" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="9" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="10" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="11" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="12" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="13" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="14" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="15" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="16" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="17" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="18" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="19" />
			</include>
			<include content="widgets_content">
				<param name="id" value="510" />
				<param name="item" value="20" />
			</include>
			<!-- Meu menu -->
			<include content="widgets_mymenu1" condition="!String.IsEmpty(skin.string(submenu41.1.master))">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),mymenu1) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<include content="widgets_mymenu2" condition="!String.IsEmpty(skin.string(submenu42.1.master))">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),mymenu2) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<include content="widgets_mymenu3" condition="!String.IsEmpty(skin.string(submenu43.1.master))">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),mymenu3) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<include content="widgets_mymenu4" condition="!String.IsEmpty(skin.string(submenu44.1.master))">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),mymenu4) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<include content="widgets_mymenu5" condition="!String.IsEmpty(skin.string(submenu45.1.master))">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),mymenu5) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<!-- Widgets jogos -->
			<include content="widgets_games">
				<param name="id" value="510" />
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),games) + ![Skin.HasSetting(submode) | ControlGroup(550).HasFocus]" />
			</include>
			<!-- Widgets paineis -->
			<include content="widgets_weather" condition="!String.IsEmpty(Weather.Plugin)">
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),weather) + ![Window.IsVisible(1171) | ControlGroup(550).HasFocus | Skin.HasSetting(submode) + Skin.HasSetting(mainmenuvertical)]" />
			</include>
			<include content="widgets_settings">
				<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(widgets),settings) + ![Window.IsVisible(1171) | ControlGroup(550).HasFocus | Skin.HasSetting(submode) + Skin.HasSetting(mainmenuvertical)]" />
			</include>
			<include content="widgets_info">
				<param name="visible" value="![Skin.HasSetting(submode) | ControlGroup(550).HasFocus | Window.IsVisible(1171) | String.IsEqual(Container(9000).ListItem.Property(widgets),settings) | String.IsEqual(Container(9000).ListItem.Property(master),weather)]" />
			</include>
			<!-- Fundo base dos subwidgets -->
			<control type="image">
				<left>0</left>
				<top>225</top>
				<width>1920</width>
				<height>855</height>
				<texture diffuse="shadow_mask.png">$VAR[texture_base]</texture>
				<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
				<animation effect="fade" end="75" condition="true">Conditional</animation>
				<include>animation_fade</include>
				<visible>ControlGroup(550).HasFocus + !Skin.HasSetting(submode)</visible>
			</control>
			<!-- SubWidgets -->
			<control type="group" id="550">
				<top>380</top>
				<animation effect="slide" start="0,0" end="0,-380" time="300" tween="cubic" easing="inout" condition="ControlGroup(550).HasFocus">true</animation>
				<visible>Window.IsVisible(home) + !Skin.HasSetting(submode)</visible>
				<control type="image">
					<left>45</left>
					<top>730</top>
					<width>1830</width>
					<height>40</height>
					<texture>$VAR[texture_base]</texture>
					<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
					<animation effect="fade" end="65" condition="true">Conditional</animation>
				</control>
				<control type="panel" id="9001">
					<include>animation_submenu</include>
					<viewtype>list</viewtype>
					<left>45</left>
					<top>630</top>
					<width>1830</width>
					<height>40</height>
					<onup>SetFocus(9000)</onup>
					<ondown condition="!String.IsEqual(Container(510).numitems,0)">SetFocus(510)</ondown>
					<ondown condition="String.IsEqual(Container(510).numitems,0)">8004</ondown>
					<orientation>horizontal</orientation>
					<scrolltime tween="sine" easing="out">500</scrolltime>
					<focusposition>3</focusposition>
					<movement>0</movement>
					<itemgap>0</itemgap>
					<animation effect="slide" start="0,0" end="0,100" time="300" tween="cubic" easing="inout" condition="Skin.HasSetting(mainmenuvertical)">true</animation>
					<visible>Window.IsVisible(home)</visible>
					<itemlayout width="305" height="40">
						<control type="label">
							<left>10</left>
							<top>0</top>
							<height>40</height>
							<width>285</width>
							<align>center</align>
							<aligny>center</aligny>							
							<label>$INFO[ListItem.Label]</label>
							<font>font_button</font>
						</control>
					</itemlayout>
					<focusedlayout width="305" height="40">
						<control type="button">
							<include>invisible</include>
							<onfocus condition="String.Contains(ListItem.Property(widgets),directors)">Skin.SetString(widgetsfix,directors)</onfocus>
							<onfocus condition="String.IsEqual(ListItem.Property(widgets),musicdb://genres/)">Skin.SetString(widgetsfix,musicgenres)</onfocus>
							<onfocus condition="String.Contains(ListItem.Property(widgets),genres) + !String.IsEqual(ListItem.Property(widgets),musicdb://genres/)">Skin.SetString(widgetsfix,videogenres)</onfocus>
							<onfocus condition="String.Contains(ListItem.Property(widgets),countries)">Skin.SetString(widgetsfix,countries)</onfocus>
							<onfocus condition="String.Contains(ListItem.Property(widgets),studios)">Skin.SetString(widgetsfix,studios)</onfocus>						
							<onfocus condition="String.Contains(ListItem.Property(widgets),years)">Skin.SetString(widgetsfix,years)</onfocus>
							<onfocus condition="!String.Contains(ListItem.Property(widgets),directors) + !String.Contains(ListItem.Property(widgets),genres) + !String.Contains(ListItem.Property(widgets),countries) + !String.Contains(ListItem.Property(widgets),studios) + !String.Contains(ListItem.Property(widgets),years)">Skin.Reset(widgetsfix)</onfocus>						
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<width>305</width>
							<height>40</height>
							<texture colordiffuse="$INFO[skin.string(colortext)]">white.png</texture>
						</control>
						<control type="label">
							<left>10</left>
							<top>0</top>
							<height>40</height>
							<width>285</width>
							<align>center</align>
							<aligny>center</aligny>							
							<label>$INFO[ListItem.Label]</label>
							<font>font_button</font>
							<textcolor>$INFO[skin.string(colortextfocused)]</textcolor>
						</control>
					</focusedlayout>
						<content>
							<item>
								<!-- Filmes recentes -->
								<include content="subwidgets_items">
									<param name="item" value="1" />
									<param name="label" value="$LOCALIZE[20382]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://recentlyaddedmovies/" />
									<param name="action" value="ActivateWindow(videos,recentlyaddedmovies,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>
								<!-- Filmes em progresso -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[575]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://service.library.data.provider?type=recommendedmovies&amp;reload=$INFO[Window.Property(recommendedmovies)]" />
									<param name="action" value="ActivateWindow(videos,plugin://service.library.data.provider?type=recommendedmovies,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>							
								<!-- Filmes nao assistidos -->
								<include content="subwidgets_items">
									<param name="item" value="3" />
									<param name="label" value="$LOCALIZE[16101]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="special://skin/playlists/movies_unwatched.xsp" />
									<param name="action" value="ActivateWindow(videos,special://skin/playlists/movies_unwatched.xsp)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>
								<!-- Filmes sets -->
								<include content="subwidgets_items">
									<param name="item" value="4" />
									<param name="label" value="$LOCALIZE[20434]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://movies/sets/" />
									<param name="action" value="ActivateWindow(videos,moviesets,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>
								<!-- Filmes generos -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[135]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://movies/genres/" />
									<param name="action" value="ActivateWindow(videos,moviegenres,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>
								<!-- Favoritos -->
								<include content="subwidgets_items">
									<param name="item" value="6" />
									<param name="label" value="$LOCALIZE[1036]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://script.skin.helper.widgets/?mediatype=favourites&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
									<param name="action" value="ActivateWindow(favourites)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),movies)" />
								</include>
							</item>
							<item>
								<!-- Episodios recentes -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[20360] - $LOCALIZE[20382]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://recentlyaddedepisodes/" />
									<param name="action" value="ActivateWindow(videos,recentlyaddedepisodes,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Episodios em progresso -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[20360] - $LOCALIZE[575]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window.Property(recommendedepisodes)]" />
									<param name="action" value="ActivateWindow(videos,plugin://service.library.data.provider?type=recommendedepisodes,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Episodios nao assistidos -->
								<include content="subwidgets_items">
									<param name="item" value="1" />
									<param name="label" value="$LOCALIZE[20360] - $LOCALIZE[16101]" />
									<param name="type" value="videos" />
									<param name="sort" value="episode" />
									<param name="order" value="ascending" />
									<param name="widgets" value="special://skin/playlists/episodes_unwatched.xsp" />
									<param name="action" value="ActivateWindow(videos,special://skin/playlists/episodes_unwatched.xsp)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Seriados nao assistidos -->
								<include content="subwidgets_items">
									<param name="item" value="3" />
									<param name="label" value="$LOCALIZE[36903] - $LOCALIZE[16101]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="special://skin/playlists/tvshows_unwatched.xsp" />
									<param name="action" value="ActivateWindow(videos,special://skin/playlists/tvshows_unwatched.xsp)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Seriados generos -->
								<include content="subwidgets_items">
									<param name="item" value="4" />
									<param name="label" value="$LOCALIZE[135]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://tvshows/genres/" />
									<param name="action" value="ActivateWindow(videos,tvshowgenres,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Favoritos -->
								<include content="subwidgets_items">
									<param name="item" value="6" />
									<param name="label" value="$LOCALIZE[1036]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://script.skin.helper.widgets/?mediatype=favourites&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
									<param name="action" value="ActivateWindow(favourites)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),tvshows)" />					
								</include>
							</item>
							<item>
								<!-- Concertos recentes -->
								<include content="subwidgets_items">
									<param name="item" value="1" />
									<param name="label" value="$LOCALIZE[20382]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://recentlyaddedmusicvideos/" />
									<param name="action" value="ActivateWindow(videos,recentlyaddedmusicvideos,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />					
								</include>
							</item>
							<item>
								<!-- Concertos nao vistos -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[16101]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="special://skin/playlists/musicvideos_unwatched.xsp" />
									<param name="action" value="ActivateWindow(videos,special://skin/playlists/musicvideos_unwatched.xsp)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />
								</include>
							</item>
							<item>
								<!-- Concertos em progresso -->
								<include content="subwidgets_items">
									<param name="item" value="3" />
									<param name="label" value="$LOCALIZE[575]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="special://skin/playlists/musicvideos_inprogress.xsp" />
									<param name="action" value="ActivateWindow(videos,special://skin/playlists/musicvideos_inprogress.xsp)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />
								</include>
							</item>
							<item>
								<!-- Concertos generos -->
								<include content="subwidgets_items">
									<param name="item" value="4" />
									<param name="label" value="$LOCALIZE[135]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://musicvideos/genres/" />
									<param name="action" value="ActivateWindow(videos,musicvideogenres,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />
								</include>
							</item>
							<item>
								<!-- Concertos artistas -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[133]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="videodb://musicvideos/artists/" />
									<param name="action" value="ActivateWindow(videos,musicvideoartists,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />
								</include>
							</item>
							<item>
								<!-- Favoritos -->
								<include content="subwidgets_items">
									<param name="item" value="6" />
									<param name="label" value="$LOCALIZE[1036]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://script.skin.helper.widgets/?mediatype=favourites&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
									<param name="action" value="ActivateWindow(favourites)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),concerts)" />
								</include>
							</item>
							<item>
								<!-- Albuns recentes -->
								<include content="subwidgets_items">
									<param name="item" value="1" />
									<param name="label" value="$LOCALIZE[132] - $LOCALIZE[31767]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="musicdb://recentlyaddedalbums/" />
									<param name="action" value="ActivateWindow(music,recentlyaddedalbums,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />							
								</include>
							</item>
							<item>
								<!-- Albuns em progresso -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[132] - $LOCALIZE[575]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window.Property(recommendedalbums)]" />
									<param name="action" value="ActivateWindow(music,plugin://service.library.data.provider?type=recommendedalbums,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />							
								</include>
							</item>
							<item>
								<!-- Albuns top100 -->
								<include content="subwidgets_items">
									<param name="item" value="3" />
									<param name="label" value="$LOCALIZE[132] - $LOCALIZE[31044]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="musicdb://top100/albums/" />
									<param name="action" value="ActivateWindow(music,top100albums,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />							
								</include>
							</item>
							<item>
								<!-- Faixas top100 -->
								<include content="subwidgets_items">
									<param name="item" value="4" />
									<param name="label" value="$LOCALIZE[134] - $LOCALIZE[31044]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="musicdb://top100/songs/" />
									<param name="action" value="ActivateWindow(music,top100songs,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />
								</include>
							</item>
							<item>
								<!-- Faixas genero -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[134] - $LOCALIZE[135]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="musicdb://genres/" />
									<param name="action" value="ActivateWindow(music,genres,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />
								</include>
							</item>
							<item>
								<!-- Favoritos -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[134] - $LOCALIZE[1036]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="plugin://script.skin.helper.widgets/?mediatype=favourites&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
									<param name="action" value="ActivateWindow(favourites)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),music)" />
								</include>
							</item>
							<item>
								<!-- Addons de programas -->
								<include content="subwidgets_items">
									<param name="item" value="1" />
									<param name="label" value="$LOCALIZE[1043]" />
									<param name="type" value="programs" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="addons://sources/executable/" />
									<param name="action" value="ActivateWindow(programs,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs)" />							
								</include>
							</item>
							<item>
								<!-- Addons de programas android -->
								<include content="subwidgets_items">
									<param name="item" value="2" />
									<param name="label" value="$LOCALIZE[20244]" />
									<param name="type" value="programs" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="androidapp://sources/apps/" />
									<param name="action" value="ActivateWindow(programs,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs) + System.Platform.Android" />							
								</include>
							</item>
							<item>
								<!-- Addons de video -->
								<include content="subwidgets_items">
									<param name="item" value="3" />
									<param name="label" value="$LOCALIZE[1037]" />
									<param name="type" value="videos" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="addons://sources/video/" />
									<param name="action" value="ActivateWindow(videos,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs)" />
								</include>
							</item>
							<item>
								<!-- Addons de audio -->
								<include content="subwidgets_items">
									<param name="item" value="4" />
									<param name="label" value="$LOCALIZE[1038]" />
									<param name="type" value="music" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="addons://sources/audio/" />
									<param name="action" value="ActivateWindow(music,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs)" />
								</include>
							</item>
							<item>
								<!-- Addons de jogos -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[35049]" />
									<param name="type" value="games" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="addons://sources/game/" />
									<param name="action" value="ActivateWindow(games,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs)" />
								</include>
							</item>
							<item>
								<!-- Addons de imagem -->
								<include content="subwidgets_items">
									<param name="item" value="5" />
									<param name="label" value="$LOCALIZE[1039]" />
									<param name="type" value="pictures" />
									<param name="sort" value="dateadded" />
									<param name="order" value="descending" />
									<param name="widgets" value="addons://sources/image/" />
									<param name="action" value="ActivateWindow(pictures,addons,return)" />
									<param name="visible" value="String.IsEqual(Container(9000).ListItem.Property(master),programs)" />
								</include>
							</item>
						</content>
				</control>
				<!-- Miniaturas dos filmes -->
				<control type="group">
					<animation effect="fade" start="0" end="100" time="500">Visible</animation>
					<animation effect="fade" start="100" end="0" time="0">Hidden</animation>
					<animation effect="fade" start="100" end="0" time="0" condition="!Control.IsVisible(8007)">Conditional</animation>
					<animation effect="fade" start="0" end="100" time="300" condition="Control.IsVisible(8007)">Conditional</animation>
					<visible>ControlGroup(550).HasFocus</visible>
					<control type="image">
						<left>240</left>
						<top>1030</top>
						<width>30</width>
						<height>35</height>
						<texture>arrow_settings.png</texture>
						<colordiffuse>$INFO[skin.string(colortext)]</colordiffuse>
						<aspectratio align="center" aligny="bottom">keep</aspectratio>
						<animation effect="fade" start="0" end="100" time="300" delay="500">Visible</animation>
						<animation effect="fade" start="100" end="0" time="0" condition="!Control.IsVisible(8006)">Conditional</animation>
						<animation effect="fade" start="0" end="100" time="300" condition="Control.IsVisible(8006)">Conditional</animation>
						<visible>Control.HasFocus(510)</visible>
					</control>
					<!-- Titulo -->
					<control type="label">
						<left>280</left>
						<top>1030</top>
						<width>1570</width>
						<height>35</height>
						<align>left</align>
						<aligny>center</aligny>
						<font>font_time</font>
						<label>$VAR[widgets_title]</label>
						<scroll>true</scroll>
						<animation effect="fade" start="0" end="100" time="300" delay="500">Visible</animation>
						<animation effect="fade" start="100" end="0" time="0" condition="!Control.IsVisible(8006)">Conditional</animation>
						<animation effect="fade" start="0" end="100" time="300" condition="Control.IsVisible(8006)">Conditional</animation>
						<visible>Control.HasFocus(510)</visible>
					</control>
					<control type="fixedlist" id="510">
						<left>45</left>
						<top>790</top>
						<width>1822</width>
						<height>330</height>
						<onup>9001</onup>
						<ondown>8004</ondown>
						<orientation>horizontal</orientation>
						<scrolltime tween="sine" easing="out">500</scrolltime>						
						<itemlayout width="152" height="285">
							<control type="group">
								<animation effect="fade" start="100" end="25" time="400" condition="System.IdleTime(1) + Control.HasFocus(510)">Conditional</animation>
								<animation effect="slide" start="0,0" end="0,-20" time="300" tween="cubic" easing="inout" condition="Control.HasFocus(510)">true</animation>
								<control type="image">
									<left>6</left>
									<top>235</top>
									<width>145</width>
									<height>213</height>
									<texture flipy="true" fallback="DefaultPicture.png" diffuse="thumb_poster_reflect.png" background="true">$VAR[widgets_poster]</texture>
									<colordiffuse>97FFFFFF</colordiffuse>
									<aspectratio align="center" aligny="top">keep</aspectratio>
									<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
									<visible>!Container(510).IsUpdating</visible>
								</control>
								<!-- poster -->
								<control type="image">
									<left>6</left>
									<top>20</top>
									<width>145</width>
									<height>213</height>
									<texture fallback="DefaultPicture.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[widgets_poster]</texture>
									<aspectratio align="center" aligny="bottom">keep</aspectratio>
									<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
									<visible>!Container(510).IsUpdating</visible>
								</control>
								<!-- ocupado -->
								<control type="image">
									<left>6</left>
									<top>100</top>
									<width>145</width>
									<height>145</height>
									<texture>dialogs_busy.png</texture>
									<aspectratio align="center" aligny="bottom">keep</aspectratio>
									<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="true">Conditional</animation>
									<visible>Container(510).IsUpdating</visible>
								</control>
								<control type="image">
									<left>114</left>
									<top>177</top>
									<width>38</width>
									<height>38</height>
									<texture>OverlayWatched.png</texture>
									<colordiffuse>$INFO[skin.string(colorwatched)]</colordiffuse>
									<aspectratio align="center" aligny="bottom">keep</aspectratio>
									<visible>![Skin.HasSetting(nooverlays) | Container(510).IsUpdating] + Integer.IsGreater(ListItem.Playcount,0)</visible>
								</control>
							</control>
						</itemlayout>
						<focusedlayout condition="!Control.HasFocus(510)" width="152" height="285">
							<!-- reflexo video -->
							<control type="image">
								<left>6</left>
								<top>235</top>
								<width>145</width>
								<height>213</height>
								<texture flipy="true" fallback="DefaultPicture.png" diffuse="thumb_poster_reflect.png" background="true">$VAR[widgets_poster]</texture>
								<colordiffuse>97FFFFFF</colordiffuse>
								<aspectratio align="center" aligny="top">keep</aspectratio>
								<visible>!Container(510).IsUpdating</visible>
							</control>
							<!-- poster -->
							<control type="image">
								<left>6</left>
								<top>20</top>
								<width>145</width>
								<height>213</height>
								<texture fallback="DefaultPicture.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[widgets_poster]</texture>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<visible>!Container(510).IsUpdating</visible>
							</control>
							<!-- ocupado -->
							<control type="image">
								<left>6</left>
								<top>100</top>
								<width>145</width>
								<height>145</height>
								<texture>dialogs_busy.png</texture>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="true">Conditional</animation>
								<visible>Container(510).IsUpdating</visible>
							</control>
							<control type="image">
								<left>114</left>
								<top>177</top>
								<width>38</width>
								<height>38</height>
								<texture>OverlayWatched.png</texture>
								<colordiffuse>$INFO[skin.string(colorwatched)]</colordiffuse>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<visible>![Skin.HasSetting(nooverlays) | Container(510).IsUpdating] + Integer.IsGreater(ListItem.Playcount,0)</visible>
							</control>
						</focusedlayout>
						<focusedlayout condition="Control.HasFocus(510)" width="300" height="330">
							<!-- poster -->
							<control type="image">
								<left>6</left>
								<top>40</top>
								<width>145</width>
								<height>213</height>
								<texture fallback="DefaultPicture.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[widgets_poster]</texture>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<animation effect="zoom" center="0,170" start="100" end="131" time="400" tween="cubic" easing="out" condition="Control.HasFocus(510)">Conditional</animation>
								<visible>!Container(510).IsUpdating</visible>
							</control>
							<!-- ocupado -->
							<control type="image">
								<left>6</left>
								<top>100</top>
								<width>145</width>
								<height>145</height>
								<texture>dialogs_busy.png</texture>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="true">Conditional</animation>
								<visible>Container(510).IsUpdating</visible>
							</control>
							<control type="image">
								<left>114</left>
								<top>177</top>
								<width>38</width>
								<height>38</height>
								<texture>OverlayWatched.png</texture>
								<colordiffuse>$INFO[skin.string(colorwatched)]</colordiffuse>
								<aspectratio align="center" aligny="bottom">keep</aspectratio>
								<animation effect="zoom" center="0,213" start="100" end="125" time="400" tween="cubic" easing="out" condition="Control.HasFocus(510)">Conditional</animation>
								<visible>![Skin.HasSetting(nooverlays) | Container(510).IsUpdating] + Integer.IsGreater(ListItem.Playcount,0)</visible>
							</control>
							<!-- indicacao de porcentagem -->
							<control type="group">
								<include>animation_widgetsprogress</include>
								<visible>Integer.IsGreater(ListItem.PercentPlayed,0) + !Container(510).IsUpdating</visible>
							<control type="image">
								<left>6</left>
								<top>40</top>
								<width>145</width>
								<height>213</height>
								<texture>$VAR[texture_backgroundosd]</texture>
								<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
								<animation effect="zoom" center="0,170" start="100" end="131" time="400" tween="cubic" easing="out" condition="Control.HasFocus(510)">Conditional</animation>
							</control>
							<control type="progress">
								<left>15</left>
								<top>242</top>
								<width>127</width>
								<height>8</height>
								<info>ListItem.PercentPlayed</info>
								<animation effect="zoom" center="0,170" start="100" end="131" time="400" tween="cubic" easing="out" condition="Control.HasFocus(510)">Conditional</animation>
							</control>
							<control type="label">
								<left>33</left>
								<top>235</top>
								<width>140</width>
								<height>30</height>
								<align>center</align>
								<aligny>center</aligny>
								<label>$INFO[ListItem.PercentPlayed]%</label>
								<font>font_plotsmall</font>
								<textcolor>FFF8F8F8</textcolor>
							</control>
							</control>
						</focusedlayout>				
						<content sortby="$INFO[Container(9001).ListItem.Property(sort)]" sortorder="$INFO[Container(9001).ListItem.Property(order)]" target="$INFO[Container(9001).ListItem.Property(type)]">$INFO[Container(9001).ListItem.Property(widgets)]</content>
					</control>
				</control>
			</control>			
			<!-- Grupo do menu principal -->
			<control type="group">
				<animation effect="fade" start="100" end="0" time="0" condition="Skin.HasSetting(submode) | Control.HasFocus(500) | Control.HasFocus(510) + !ControlGroup(550).HasFocus | ControlGroup(512).HasFocus | Control.HasFocus(530) | ControlGroup(540).HasFocus">Conditional</animation>
				<animation effect="fade" start="0" end="100" time="100" delay="200" condition="![Skin.HasSetting(submode) | Control.HasFocus(500) | Control.HasFocus(510) + !ControlGroup(550).HasFocus | ControlGroup(512).HasFocus | Control.HasFocus(530) | ControlGroup(540).HasFocus]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,-300" time="300" tween="sine" easing="out" condition="ControlGroup(550).HasFocus">Conditional</animation>
				<!-- Data, hora e clima -->
				<control type="group">
					<visible>Control.HasFocus(9000) + ![Window.IsVisible(1171) | Window.IsVisible(1165)]</visible>
					<control type="group">
						<left>800</left>
						<top>930</top>
						<width>1080</width>
						<height>118</height>
						<include>animation_fade</include>
						<animation effect="slide" start="0" end="424" time="300" tween="sine" easing="out" condition="!Weather.IsFetched | Weather.IsFetched + Skin.HasSetting(home_nominiweather) | String.IsEqual(Container(9000).ListItem.Property(widgets),weather)">Conditional</animation>
						<!-- data e condicao atual -->
						<control type="label">
							<left>0</left>
							<top>5</top>
							<width>651</width>
							<height>30</height>
							<align>right</align>
							<aligny>center</aligny>
							<label>$VAR[mainmenu_dateandcondition]</label>
							<font>font_plot</font>
							<include>animation_fade</include>
							<visible>!Skin.HasSetting(home_nodateandcondition)</visible>
						</control>
						<!-- temperatura atual e hora -->
						<control type="label">
							<left>200</left>
							<top>40</top>
							<width>353</width>
							<height>40</height>
							<align>right</align>
							<aligny>bottom</aligny>
							<label>$VAR[mainmenu_weatherandclock]</label>
							<font>font_time</font>
							<textcolor>$INFO[skin.string(colorheader)]</textcolor>
							<include>animation_fade</include>
							<animation effect="slide" start="0" end="88" time="300" tween="sine" easing="out" condition="!Weather.IsFetched | String.IsEqual(Container(9000).ListItem.Property(widgets),weather)">Conditional</animation>
							<visible>!Skin.HasSetting(home_noweatherandclock)</visible>
						</control>
						<control type="image">
							<left>573</left>
							<top>32</top>
							<width>78</width>
							<height>78</height>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<texture>$VAR[weathericons_path]$INFO[Window(Weather).Property(Current.OutlookIcon)]</texture>
							<animation effect="fade" time="250">Visible</animation>
							<animation effect="fade" time="50">Hidden</animation>
							<visible>![Weather.IsFetched | String.IsEqual(Container(9000).ListItem.Property(widgets),weather) | Skin.HasSetting(home_noweatherandclock) | Skin.HasSetting(resource.images.weathericons.multi) | String.IsEmpty(skin.string(resource.images.weathericons.path))]</visible>
						</control>
						<control type="multiimage">
							<left>573</left>
							<top>32</top>
							<width>78</width>
							<height>78</height>
							<aspectratio align="center" aligny="top">keep</aspectratio>
							<imagepath>$VAR[weathericons_path]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
							<timeperimage>75</timeperimage>
							<randomize>false</randomize>
							<fadetime>1</fadetime>
							<animation effect="fade" time="250">Visible</animation>
							<animation effect="fade" time="50">Hidden</animation>
							<visible>Weather.IsFetched + ![Skin.HasSetting(home_noweatherandclock) | String.IsEqual(Container(9000).ListItem.Property(widgets),weather)] + [Skin.HasSetting(resource.images.weathericons.multi) | String.IsEmpty(skin.string(resource.images.weathericons.path))]</visible>
						</control>
						<!-- Mini clima -->
						<control type="group">
						<left>671</left>
						<include>animation_fade</include>
						<visible>Weather.IsFetched + ![String.IsEmpty(Weather.Plugin) | Skin.HasSetting(home_nominiweather)]</visible>
							<control type="image">
								<left>0</left>
								<top>0</top>
								<width>2</width>
								<height>118</height>
								<texture colordiffuse="$INFO[skin.string(colortext)]">line_v.png</texture>
								<visible>![Skin.HasSetting(home_nodateandcondition) + Skin.HasSetting(home_noweatherandclock) | String.IsEqual(Container(9000).ListItem.Property(widgets),weather)]</visible>
							</control>
							<control type="grouplist">
								<left>0</left>
								<orientation>horizontal</orientation>
								<include content="miniweather_items">
									<param name="item" value="2" />
								</include>
								<include content="miniweather_items">
									<param name="item" value="3" />
								</include>
								<include content="miniweather_items">
									<param name="item" value="4" />
								</include>
								<include content="miniweather_items">
									<param name="item" value="5" />
								</include>
								<include content="miniweather_items">
									<param name="item" value="6" />
								</include>
							</control>
						</control>
					</control>
				</control>					
				<!-- Barra do menu principal -->
				<control type="image">
					<left>0</left>
					<top>902</top>
					<width>1920</width>
					<height>87</height>
					<texture>$VAR[mainmenubar_style]</texture>
					<colordiffuse>$INFO[skin.string(colormainmenubar)]</colordiffuse>
					<visible>!Skin.HasSetting(mainmenuvertical)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>739</top>
					<width>1920</width>
					<height>87</height>
					<texture flipy="true">$VAR[mainmenubar_style]</texture>
					<colordiffuse>$INFO[skin.string(colormainmenubar)]</colordiffuse>
					<visible>Skin.HasSetting(mainmenuvertical)</visible>
				</control>
				<!-- Menu principal -->
				<include content="mainmenu" condition="!Skin.HasSetting(mainmenuvertical) + !Skin.HasSetting(mainmenufixedlist)">
					<param name="type" value="wraplist" />
					<param name="top" value="818" />
					<param name="width" value="1920" />
					<param name="height" value="90" />
					<param name="onleft" value="9000" />
					<param name="onright" value="9000" />
					<param name="onup" value="8001" />
					<param name="ondown" value="8002" />
					<param name="orientation" value="horizontal" />
					<param name="movement" value="0" />
					<param name="itemlayoutwidth" value="575" />
					<param name="itemlayoutheight" value="90" />
					<param name="focusedlayoutwidth" value="720" />
					<param name="focusedlayoutheight" value="90" />
					<param name="fade" value="ControlGroup(600).HasFocus" />
				</include>
				<include content="mainmenu" condition="!Skin.HasSetting(mainmenuvertical) + Skin.HasSetting(mainmenufixedlist)">
					<param name="type" value="fixedlist" />
					<param name="top" value="818" />
					<param name="width" value="1920" />
					<param name="height" value="90" />
					<param name="onleft" value="9000" />
					<param name="onright" value="9000" />
					<param name="onup" value="8001" />
					<param name="ondown" value="8002" />
					<param name="orientation" value="horizontal" />
					<param name="movement" value="0" />
					<param name="itemlayoutwidth" value="575" />
					<param name="itemlayoutheight" value="90" />
					<param name="focusedlayoutwidth" value="720" />
					<param name="focusedlayoutheight" value="90" />
					<param name="fade" value="ControlGroup(600).HasFocus" />
				</include>
				<include content="mainmenu" condition="Skin.HasSetting(mainmenuvertical) + !Skin.HasSetting(mainmenufixedlist)">
					<param name="type" value="wraplist" />
					<param name="top" value="625" />
					<param name="width" value="640" />
					<param name="height" value="400" />
					<param name="onleft" value="8002" />
					<param name="onright" value="8001" />
					<param name="onup" value="9000" />
					<param name="ondown" value="9000" />
					<param name="orientation" value="vertical" />
					<param name="movement" value="1" />
					<param name="itemlayoutwidth" value="639" />
					<param name="itemlayoutheight" value="110" />
					<param name="focusedlayoutwidth" value="639" />
					<param name="focusedlayoutheight" value="190" />
					<param name="fade" value="ControlGroup(600).HasFocus" />
				</include>
				<include content="mainmenu" condition="Skin.HasSetting(mainmenuvertical) + Skin.HasSetting(mainmenufixedlist)">
					<param name="type" value="fixedlist" />
					<param name="top" value="625" />
					<param name="width" value="640" />
					<param name="height" value="400" />
					<param name="onleft" value="8002" />
					<param name="onright" value="8001" />
					<param name="onup" value="9000" />
					<param name="ondown" value="9000" />
					<param name="orientation" value="vertical" />
					<param name="movement" value="1" />
					<param name="itemlayoutwidth" value="639" />
					<param name="itemlayoutheight" value="110" />
					<param name="focusedlayoutwidth" value="639" />
					<param name="focusedlayoutheight" value="190" />
					<param name="fade" value="ControlGroup(600).HasFocus" />
				</include>
				<!-- Estatus da livraria -->
				<control type="label">
					<left>50</left>
					<top>950</top>
					<width>596</width>
					<height>30</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[mainmenu_librarystatus]</label>
					<font>font_plot</font>
					<textcolor>FFF8F8F8</textcolor>
					<animation effect="fade" start="100" end="0" time="0" condition="!Control.IsVisible(8007)">Conditional</animation>
					<animation effect="fade" start="0" end="100" time="200" condition="Control.IsVisible(8007)">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-201" time="0" tween="sine" easing="out" condition="Skin.HasSetting(mainmenuvertical)">Conditional</animation>
					<visible>Control.HasFocus(9000) + ![Window.IsVisible(1171) | Window.IsVisible(1165) | Skin.HasSetting(home_nototals) | Player.HasMedia] + [String.StartsWith(Container(9000).ListItem.Property(status),movies) + Library.HasContent(Movies) | String.StartsWith(Container(9000).ListItem.Property(status),tvshows) + Library.HasContent(TVShows) | String.StartsWith(Container(9000).ListItem.Property(status),concerts) + Library.HasContent(MusicVideos) | String.StartsWith(Container(9000).ListItem.Property(status),music) + Library.HasContent(Music) | String.StartsWith(Container(9000).ListItem.Property(status),favourites) + !String.IsEmpty(Window(home).Property(Favourite.1.Name)) | String.StartsWith(Container(9000).ListItem.Property(status),vplaylist) | String.StartsWith(Container(9000).ListItem.Property(status),aplaylist) | String.IsEqual(Container(9000).ListItem.Property(widgets),weather)]</visible>
				</control>
				<!-- Mobilia do menu principal (dentro do grupo do menu principal) -->
			</control>
			
			<!-- Tocando agora menor -->
			<control type="group">
				<animation effect="slide" start="0,-500" end="0,0" time="300" delay="600" tween="sine" easing="out">Visible</animation>
				<animation effect="slide" start="0,0" end="0,-500" time="200" tween="sine" easing="out">Hidden</animation>
				<visible>[Control.HasFocus(9000) | ControlGroup(600).HasFocus | Control.HasFocus(703)] + Player.HasMedia + ![String.IsEqual(Container(9000).ListItem.Property(widgets),settings) | String.IsEqual(Container(9000).ListItem.Property(widgets),weather) | Skin.HasSetting(mainmenuvertical) + Skin.HasSetting(submode)]</visible>
				<!-- Fundo -->
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>1920</width>
					<height>755</height>
					<texture flipy="true" diffuse="shadow_mask.png">$VAR[texture_base]</texture>
					<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
				</control>
				<!-- Fundo borda -->
				<control type="image">
					<left>39</left>
					<top>36</top>
					<width>596</width>
					<height>347</height>
					<texture>fanartframe.png</texture>
					<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
				</control>
				<!-- Fanart do artista -->
				<control type="multiimage">
					<left>60</left>
					<top>53</top>
					<width>552</width>
					<height>311</height>
					<timeperimage>5000</timeperimage>
					<randomize>true</randomize>
					<aspectratio>keep</aspectratio>
					<imagepath fallback="DefaultExtraThumbs.png" background="true">$VAR[playerthumb]</imagepath>
					<fadetime>commonfadetime</fadetime>
					<visible>Player.HasAudio + !Control.HasFocus(703)</visible>
				</control>
				<!-- Thumb das proximas faixas -->
				<control type="image">
					<left>60</left>
					<top>53</top>
					<width>552</width>
					<height>311</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture fallback="DefaultAudioCover.png" background="true">$INFO[Container(703).ListItem.Icon]</texture>
					<fadetime>commonfadetime</fadetime>
					<visible>Control.HasFocus(703)</visible>
				</control>
				<!-- Glass das proximas faixas -->
				<control type="image">
					<left>50</left>
					<top>47</top>
					<width>572</width>
					<height>323</height>
					<texture>thumb_widgets_glass.png</texture>
					<include>animation_fade</include>
					<visible>Control.HasFocus(703)</visible>
				</control>
				<!-- Logo -->
				<control type="image">
					<left>65</left>
					<top>280</top>
					<width>165</width>
					<height>90</height>
					<aspectratio align="left" aligny="bottom">keep</aspectratio>
					<texture background="true">$INFO[skin.string(CustomMusicLogoPath)]$INFO[MusicPlayer.Artist,,/logo.png]</texture>
					<fadetime>commonfadetime</fadetime>
					<visible>Player.HasAudio</visible>
				</control>
				<control type="videowindow" id="8">
					<left>60</left>
					<top>53</top>
					<width>552</width>
					<height>311</height>
					<aspectratio>stretch</aspectratio>
					<animation effect="slide" start="0,0" end="-3000,0" time="0" tween="sine" easing="out" >WindowClose</animation>
					<visible>Player.HasVideo</visible>
				</control>
				<!-- Titulo -->
				<control type="label">
					<left>644</left>
					<top>45</top>
					<width>1224</width>
					<height>30</height>
					<align>left</align>
					<font>font_timesmall</font>
					<textcolor>$INFO[skin.string(colorheader)]</textcolor>
					<label>$VAR[playertitle]</label>
					<scroll>true</scroll>
				</control>
				<!-- Subtitulo -->
				<control type="label">
					<left>644</left>
					<top>80</top>
					<width>1224</width>
					<height>30</height>
					<align>left</align>
					<font>font_plot</font>
					<label>$VAR[playersubtitle]</label>
					<scroll>true</scroll>
				</control>
				<!-- Detalhes da faixa em reproducao -->
				<control type="label">
					<left>644</left>
					<top>120</top>
					<width>1224</width>
					<height>50</height>
					<align>left</align>
					<font>font_plot</font>
					<label>$INFO[Container(703).ListItem.Property(Details)]</label>
					<scroll>true</scroll>
					<visible>Control.HasFocus(703)</visible>
				</control>
				<!-- Plot -->
				<control type="textbox">
					<left>644</left>
					<top>120</top>
					<width>1224</width>
					<height>252</height>
					<font>font_plot</font>
					<label>$VAR[playerplot]</label>
					<autoscroll delay="20000" time="3000" repeat="20000">!Skin.HasSetting(noallowscroll)</autoscroll>
					<visible>!Control.HasFocus(703)</visible>
				</control>
				<!-- Proximas faixas -->
				<control type="group">
					<visible>![String.IsEmpty(MusicPlayer.offset(1).Artist) | Skin.HasSetting(home_nonexttracks)]</visible>
					<control type="label">
						<left>52</left>
						<top>380</top>
						<width>600</width>
						<height>25</height>
						<align>left</align>
						<font>font_button</font>
						<textcolor>$INFO[skin.string(colorheader)]</textcolor>
						<label>$LOCALIZE[31325] [COLOR=$INFO[skin.string(colortextlist)]]($INFO[Container(703).NumItems] $LOCALIZE[31126])[/COLOR]</label>
					</control>
					<control type="image">
						<left>50</left>
						<top>417</top>
						<width>1820</width>
						<height>60</height>
						<texture>$VAR[texture_base]</texture>
						<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
						<animation effect="fade" end="65" condition="true">Conditional</animation>
					</control>
					<control type="panel" id="703">
						<left>52</left>
						<top>417</top>
						<width>1820</width>
						<height>65</height>
						<onup>9000</onup>
						<ondown>9000</ondown>
						<onleft>9000</onleft>
						<onright>9000</onright>
						<orientation>horizontal</orientation>
						<pagecontrol></pagecontrol>
						<include>animation_homefade</include>
						<itemlayout width="304" height="60">
							<control type="image">
								<left>0</left>
								<top>0</top>
								<width>60</width>
								<height>60</height>
								<aspectratio align="center">stretch</aspectratio>
								<texture fallback="DefaultAudioCover.png">$INFO[ListItem.Icon]</texture>
							</control>
							<control type="label">
								<left>70</left>
								<top>5</top>
								<width>220</width>
								<height>24</height>
								<align>left</align>
								<font>font_plot</font>
								<label>$INFO[ListItem.Label]</label>
							</control>
							<control type="label">
								<left>70</left>
								<top>29</top>
								<width>220</width>
								<height>30</height>
								<align>left</align>
								<font>font_plotsmall</font>
								<label>$INFO[ListItem.Label2]</label>
							</control>
						</itemlayout>
						<focusedlayout width="304" height="60">
							<control type="image">
								<left>60</left>
								<top>0</top>
								<width>240</width>
								<height>60</height>
								<texture>grey.png</texture>
								<include>animation_fade</include>
							</control>
							<control type="image">
								<left>0</left>
								<top>0</top>
								<width>60</width>
								<height>60</height>
								<aspectratio align="center">stretch</aspectratio>
								<texture fallback="DefaultAudioCover.png">$INFO[ListItem.Icon]</texture>
							</control>
							<control type="label">
								<left>70</left>
								<top>5</top>
								<width>220</width>
								<height>24</height>
								<align>left</align>
								<font>font_plot</font>
								<textcolor>E0101010</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
							<control type="label">
								<left>70</left>
								<top>29</top>
								<width>220</width>
								<height>30</height>
								<align>left</align>
								<font>font_plotsmall</font>
								<textcolor>E0101010</textcolor>
								<label>$INFO[ListItem.Label2]</label>
							</control>
						</focusedlayout>
						<include>nexttracks_content</include>
					</control>
				</control>
			</control>
			<!-- Controles -->
			<control type="group" id="600">
				<left>50</left>
				<top>946</top>
				<height>40</height>
				<width>560</width>
				<enable>Player.HasMedia</enable>
				<include>animation_fade</include>
				<animation effect="fade" start="100" end="0" time="0" condition="Skin.HasSetting(submode)">Conditional</animation>
				<animation effect="fade" start="0" end="100" time="100" delay="200" condition="!Skin.HasSetting(submode)">Conditional</animation>
				<animation effect="slide" end="0,-199" time="0" tween="sine" easing="out" condition="Skin.HasSetting(mainmenuvertical)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,-300" time="300" tween="sine" easing="out" condition="ControlGroup(550).HasFocus">Conditional</animation>
				<visible>Player.HasMedia + ![Control.HasFocus(510) | ControlGroup(512).HasFocus | ControlGroup(550).HasFocus]</visible>
				<include content="mainmenu_controls">
					<!-- play DVD -->
					<param name="type" value="button" />
					<param name="id" value="601" />
					<param name="left" value="0" />
					<param name="onleft" value="9000" />
					<param name="onright" value="602" />
					<param name="action" value="PlayDVD" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_playdisc_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="System.HasMediaDVD + ![Player.Playing | Player.Paused | Player.Forwarding | Player.Rewinding]" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- tocar/pausa -->
					<param name="type" value="togglebutton" />
					<param name="id" value="602" />
					<param name="left" value="46" />
					<param name="onleft" value="601" />
					<param name="onright" value="603" />
					<param name="action" value="PlayerControl(Play)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_pause_square.png" />
					<param name="usealttexture" value="Player.Paused | Player.Forwarding | Player.Rewinding" />
					<param name="alttexture" value="osd_menu_play_square.png" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- parar -->
					<param name="type" value="button" />
					<param name="id" value="603" />
					<param name="left" value="92" />
					<param name="onleft" value="602" />
					<param name="onright" value="604" />
					<param name="action" value="PlayerControl(Stop)" />
					<param name="action2" value="SetFocus(9000)" />
					<param name="texture" value="osd_menu_stop_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- proximas faixas -->
					<param name="type" value="button" />
					<param name="id" value="604" />
					<param name="left" value="138" />
					<param name="onleft" value="603" />
					<param name="onright" value="605" />
					<param name="action" value="SetFocus(703)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_nexttracks_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="Player.HasAudio + !String.IsEmpty(MusicPlayer.offset(1).Artist)" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- playlist -->
					<param name="type" value="button" />
					<param name="id" value="605" />
					<param name="left" value="184" />
					<param name="onleft" value="604" />
					<param name="onright" value="606" />
					<param name="action" value="ActivateWindow(musicplaylist)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_playlist_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="Player.HasAudio + !String.IsEmpty(MusicPlayer.offset(1).Artist)" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- anterior -->
					<param name="type" value="button" />
					<param name="id" value="606" />
					<param name="left" value="230" />
					<param name="onleft" value="605" />
					<param name="onright" value="607" />
					<param name="action" value="PlayerControl(Previous)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_skipbwd_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="!VideoPlayer.Content(LiveTV)" />
				</include>
				<include content="mainmenu_controls">
					<!-- canal - -->
					<param name="type" value="button" />
					<param name="id" value="607" />
					<param name="left" value="230" />
					<param name="onleft" value="606" />
					<param name="onright" value="608" />
					<param name="action" value="ChannelDown" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_skipbwd_channeldown.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="VideoPlayer.Content(LiveTV)" />
				</include>
				<include content="mainmenu_controls">
					<!-- retrocesso -->
					<param name="type" value="button" />
					<param name="id" value="608" />
					<param name="left" value="276" />
					<param name="onleft" value="607" />
					<param name="onright" value="609" />
					<param name="action" value="PlayerControl(Rewind)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_rew_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- avanco -->
					<param name="type" value="button" />
					<param name="id" value="609" />
					<param name="left" value="322" />
					<param name="onleft" value="608" />
					<param name="onright" value="610" />
					<param name="action" value="PlayerControl(Forward)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_ff_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- proximo -->
					<param name="type" value="button" />
					<param name="id" value="610" />
					<param name="left" value="368" />
					<param name="onleft" value="609" />
					<param name="onright" value="611" />
					<param name="action" value="PlayerControl(Next)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_skipfwd_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="!VideoPlayer.Content(LiveTV)" />
				</include>
				<include content="mainmenu_controls">
					<!-- canal + -->
					<param name="type" value="button" />
					<param name="id" value="611" />
					<param name="left" value="368" />
					<param name="onleft" value="610" />
					<param name="onright" value="612" />
					<param name="action" value="ChannelUp" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_skipfwd_channelup.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="VideoPlayer.Content(LiveTV)" />
				</include>
				<include content="mainmenu_controls">
					<!-- player controls -->
					<param name="type" value="button" />
					<param name="id" value="612" />
					<param name="left" value="414" />
					<param name="onleft" value="611" />
					<param name="onright" value="613" />
					<param name="action" value="ActivateWindow(playercontrols)" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_playercontrols_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
				<include content="mainmenu_controls">
					<!-- tela cheia -->
					<param name="type" value="button" />
					<param name="id" value="613" />
					<param name="left" value="460" />
					<param name="onleft" value="612" />
					<param name="onright" value="9000" />
					<param name="action" value="fullscreen" />
					<param name="action2" value="" />
					<param name="texture" value="osd_menu_fullscreen_square.png" />
					<param name="usealttexture" value="" />
					<param name="alttexture" value="" />
					<param name="enable" value="" />
					<param name="visible" value="" />
				</include>
			</control>
			<!-- Titulo dos controles -->
			<control type="label">
				<left>0</left>
				<top>848</top>
				<width>600</width>
				<height>90</height>
				<include condition="String.IsEqual(skin.string(stylefont),font1)">Font1</include>
				<include condition="String.IsEqual(skin.string(stylefont),font2)">Font2</include>
				<include condition="String.IsEqual(skin.string(stylefont),font3)">Font3</include>
				<include condition="String.IsEqual(skin.string(stylefont),font4)">Font4</include>
				<include condition="String.IsEqual(skin.string(stylefont),font5)">Font5</include>
				<include condition="String.IsEqual(skin.string(stylefont),font6)">Font6</include>
				<include condition="String.IsEqual(skin.string(stylefont),font7)">Font7</include>
				<include condition="String.IsEqual(skin.string(stylefont),font8)">Font8</include>
				<label>$VAR[playercontrols]</label>
				<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
				<animation effect="slide" start="0,0" end="0,50" time="0" tween="sine" easing="out" condition="Skin.HasSetting(mainmenuvertical)">Conditional</animation>
				<visible>ControlGroup(600).HasFocus</visible>			
			</control>
			<!-- Mobilia do menu principal (dentro do grupo geral) -->			
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>1920</width>
				<height>1080</height>
				<texture>black.png</texture>
				<include>animation_fade</include>
				<visible>!String.IsEqual(skin.string(defaultsettings),0)</visible>
			</control>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)">HomeRSS</include>
			<include>background_black</include>
			<include condition="Skin.HasSetting(touchscreen)">touchscreen</include>
		</control>
	</controls>
</window>