<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Aeon MQ 8 -->
	<include name="animation_fade">
		<animation effect="fade" time="500">WindowOpen</animation>
		<animation effect="fade" time="200">Visible</animation>
		<animation effect="fade" time="200">WindowClose</animation>
		<animation effect="fade" time="200">Hidden</animation>
	</include>
	<include name="animation_visiblechange">
		<animation effect="fade" time="350">Visible</animation>
		<animation effect="fade" time="350">Hidden</animation>
	</include>
	<include name="animation_windowhome">
		<animation type="WindowOpen" reversible="false" condition="Window.Previous(Startup)">
			<effect type="zoom" start="200" end="100" center="auto" time="2000" delay="800" tween="cubic" easing="out" />
			<effect type="fade" start="0" end="100" time="2000" delay="800" />
		</animation>
		<animation type="WindowOpen" reversible="false" condition="!Window.Previous(Startup) + String.IsEqual(skin.string(animationwindow),zoom)">
			<effect type="zoom" start="150" end="100" center="auto" time="500" tween="cubic" easing="out" />
			<effect type="fade" start="0" end="100" time="500" />
		</animation>
		<animation type="WindowOpen" reversible="false" condition="!Window.Previous(Startup) + String.IsEqual(skin.string(animationwindow),slowzoom)">
			<effect type="zoom" start="150" end="100" center="auto" time="800" tween="cubic" easing="out" />
			<effect type="fade" start="0" end="100" time="800" />
		</animation>
		<animation type="WindowClose" reversible="false" condition="!String.IsEqual(skin.string(animationwindow),fade)">
			<effect type="fade" start="100" end="0" time="300" />
			<effect type="zoom" start="100" end="130" center="auto" time="300" tween="cubic" easing="in" />
		</animation>
		<animation effect="fade" time="350" condition="String.IsEqual(skin.string(animationwindow),fade)">WindowOpen</animation>
		<animation effect="fade" time="300" condition="String.IsEqual(skin.string(animationwindow),fade)">WindowClose</animation>
		<animation effect="fade" time="350">Visible</animation>
		<animation effect="fade" time="300">Hidden</animation>
		<animation effect="slide" start="0,0" end="0,-1500" time="300" condition="Window.IsVisible(playercontrols)">Conditional</animation>
	</include>
	<include name="animation_window">
		<animation type="WindowOpen" reversible="false" condition="String.IsEqual(skin.string(animationwindow),zoom) + !Skin.HasSetting(submode)">
			<effect type="zoom" start="150" end="100" center="auto" time="500" tween="cubic" easing="out" />
			<effect type="fade" start="0" end="100" time="500" />
		</animation>
		<animation type="WindowOpen" reversible="false" condition="String.IsEqual(skin.string(animationwindow),slowzoom) + !Skin.HasSetting(submode)">
			<effect type="zoom" start="150" end="100" center="auto" time="800" tween="cubic" easing="out" />
			<effect type="fade" start="0" end="100" time="800" />
		</animation>
		<animation type="WindowClose" reversible="false" condition="![String.IsEqual(skin.string(animationwindow),fade) | Skin.HasSetting(submode)]">
			<effect type="fade" start="100" end="0" time="300" />
			<effect type="zoom" start="100" end="130" center="auto" time="300" tween="cubic" easing="in" />
		</animation>
		<animation effect="fade" time="350" condition="String.IsEqual(skin.string(animationwindow),fade)">WindowOpen</animation>
		<animation effect="fade" time="300" condition="String.IsEqual(skin.string(animationwindow),fade)">WindowClose</animation>
		<animation effect="fade" time="350">Visible</animation>
		<animation effect="fade" time="300">Hidden</animation>
	</include>
	<include name="animation_defaultglass">
		<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
	</include>
	<include name="animation_defaultglass2">
		<animation effect="fade" start="100" end="90" time="0" condition="true">Conditional</animation>
	</include>
	<include name="animation_homeglass">
		<animation effect="fade" start="100" end="95" time="200" condition="String.Contains(skin.string(glasstexture),95)">Conditional</animation>
		<animation effect="fade" start="100" end="85" time="200" condition="String.Contains(skin.string(glasstexture),85)">Conditional</animation>
		<animation effect="fade" start="100" end="75" time="200" condition="String.Contains(skin.string(glasstexture),75)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" condition="String.Contains(skin.string(glasstexture),65)">Conditional</animation>
		<animation effect="fade" start="100" end="55" time="200" condition="String.Contains(skin.string(glasstexture),55)">Conditional</animation>
		<animation effect="fade" start="100" end="45" time="200" condition="String.Contains(skin.string(glasstexture),45)">Conditional</animation>
		<animation effect="fade" start="100" end="35" time="200" condition="String.Contains(skin.string(glasstexture),35)">Conditional</animation>
		<animation effect="fade" start="100" end="25" time="200" condition="String.Contains(skin.string(glasstexture),25)">Conditional</animation>
		<animation effect="fade" start="100" end="15" time="200" condition="String.Contains(skin.string(glasstexture),15)">Conditional</animation>
	</include>
	<include name="animation_homeglass2">
		<animation effect="fade" start="100" end="99" time="200" condition="String.Contains(skin.string(glasstexture),95)">Conditional</animation>
		<animation effect="fade" start="100" end="95" time="200" condition="String.Contains(skin.string(glasstexture),85)">Conditional</animation>
		<animation effect="fade" start="100" end="85" time="200" condition="String.Contains(skin.string(glasstexture),75)">Conditional</animation>
		<animation effect="fade" start="100" end="75" time="200" condition="String.Contains(skin.string(glasstexture),65)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" condition="String.Contains(skin.string(glasstexture),55)">Conditional</animation>
		<animation effect="fade" start="100" end="55" time="200" condition="String.Contains(skin.string(glasstexture),45)">Conditional</animation>
		<animation effect="fade" start="100" end="45" time="200" condition="String.Contains(skin.string(glasstexture),35)">Conditional</animation>
		<animation effect="fade" start="100" end="35" time="200" condition="String.Contains(skin.string(glasstexture),25)">Conditional</animation>
		<animation effect="fade" start="100" end="25" time="200" condition="String.Contains(skin.string(glasstexture),15)">Conditional</animation>
	</include>
	<include name="animation_widgetsbar">
		<animation effect="fade" start="0" end="100" time="400" delay="500">WindowOpen</animation>
		<animation effect="fade" start="0" end="100" time="400" delay="500">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
		<animation effect="fade" start="100" end="0" time="300">Hidden</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="Control.HasFocus(9000) | Window.IsActive(1146)">True</animation>
	</include>
	<include name="animation_widgetsprogress">
		<animation effect="fade" start="0" end="100" time="300" delay="500">Visible</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="!Control.IsVisible(8006)">Conditional</animation>
		<animation effect="fade" start="0" end="100" time="300" condition="Control.IsVisible(8006)">Conditional</animation>
	</include>
	<include name="animation_homefade">
		<animation effect="fade" start="0" end="100" time="400" delay="600">WindowOpen</animation>
		<animation effect="fade" start="0" end="100" time="400" delay="400">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>
	<include name="animation_topppopup">
		<animation effect="slide" start="0,-105" end="0,0" time="500" easing="inout" tween="cubic">WindowOpen</animation>
		<animation effect="slide" start="0,-105" end="0,0" time="500" easing="inout" tween="cubic">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
		<animation effect="slide" start="0,0" end="0,-105" time="300" easing="inout" tween="cubic">Hidden</animation>
		<animation effect="slide" end="0,-105" time="300" easing="inout" tween="cubic" condition="Window.IsVisible(yesnodialog) | Window.IsVisible(volumebar) | Window.IsVisible(notification) | Window.IsVisible(okdialog)">Conditional</animation>
	</include>
	<include name="animation_topdialogpopup">
		<animation effect="slide" start="0,-150" end="0" time="500" easing="inout" tween="cubic">WindowOpen</animation>
		<animation effect="slide" start="0,-150" end="0,0" time="500" easing="inout" tween="cubic">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
		<animation effect="slide" start="0,0" end="0,-150" time="300" easing="inout" tween="cubic">Hidden</animation>
	</include>
	<include name="animation_dialogpopup">
		<animation type="WindowOpen">
			<effect type="slide" start="-60,0" end="0,0" time="500" easing="inout" tween="cubic" />
			<effect type="fade" start="0" end="100" time="400" />
		</animation>
		<animation type="Visible">
			<effect type="slide" start="-60,0" end="0,0" time="500" easing="inout" tween="cubic" />
			<effect type="fade" start="0" end="100" time="400" />
		</animation>
		<animation type="WindowClose">
			<effect type="slide" start="0,0" end="60,0" time="300" easing="inout" tween="cubic" />
			<effect type="fade" start="100" end="0" time="300" />
		</animation>
		<animation type="Hidden">
			<effect type="slide" start="0,0" end="60,0" time="300" easing="inout" tween="cubic" />
			<effect type="fade" start="100" end="0" time="250" />
		</animation>
	</include>
	<include name="animation_hidephotoshow">
		<animation type="Conditional" reversible="true" condition="Control.HasFocus(195)">
			<effect type="slide" start="0,0" end="0,450" time="400" tween="cubic" easing="in" />
		</animation>
	</include>
	<include name="animation_submenu">
		<animation effect="slide" start="-450,0" end="0,0" time="300" delay="300" tween="sine" easing="in" reversible="false" condition="Window.IsVisible(1157) | Skin.HasSetting(mainmenuvertical)">WindowOpen</animation>
		<animation effect="slide" start="0,0" end="-450,0" time="300" tween="sine" easing="out" reversible="false" condition="Window.IsVisible(1157) | Skin.HasSetting(mainmenuvertical)">WindowClose</animation>
		<animation effect="slide" start="0,180" end="0,100" time="300" tween="sine" easing="in" reversible="false" condition="Window.IsVisible(home) + !Skin.HasSetting(mainmenuvertical) + !Integer.IsGreater(Container(9010).numitems,6)">WindowOpen</animation>
		<animation effect="slide" start="0,180" end="0,50" time="300" tween="sine" easing="in" reversible="false" condition="Window.IsVisible(home) + !Skin.HasSetting(mainmenuvertical) + Integer.IsGreater(Container(9010).numitems,6) + !Integer.IsGreater(Container(9010).numitems,12)">WindowOpen</animation>
		<animation effect="slide" start="0,180" end="0,0" time="300" tween="sine" easing="in" reversible="false" condition="Window.IsVisible(home) + !Skin.HasSetting(mainmenuvertical) + Integer.IsGreater(Container(9010).numitems,12)">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="Window.IsVisible(home)">WindowClose</animation>
	</include>
	<include name="animation_sortselector">
		<animation effect="slide" start="0,450" end="0,0" time="400" delay="500" tween="sine" easing="out">WindowOpen</animation>
		<animation effect="slide" start="0,450" end="0,0" time="400" delay="500" tween="sine" easing="out">Visible</animation>
		<animation effect="slide" start="0,0" end="0,450" time="300" tween="sine" easing="out">Hidden</animation>
		<animation effect="slide" start="0,180" end="0,100" time="300" tween="cubic" easing="inout" reversible="false" condition="!Integer.IsGreater(Container(530).numitems,6)">True</animation>
		<animation effect="slide" start="0,180" end="0,80" time="300" tween="cubic" easing="inout" reversible="false" condition="Integer.IsGreater(Container(530).numitems,12) + !Integer.IsGreater(Container(530).numitems,18)">True</animation>
		<animation effect="slide" start="0,180" end="0,40" time="300" tween="cubic" easing="inout" reversible="false" condition="Integer.IsGreater(Container(530).numitems,19) + !Integer.IsGreater(Container(530).numitems,24)">True</animation>
		<animation effect="slide" start="0,180" end="0,0" time="300" tween="cubic" easing="inout" reversible="false" condition="Integer.IsGreater(Container(530).numitems,25)">True</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="Control.HasFocus(9000)">True</animation>
	</include>
	<include name="animation_hiddenview">
		<animation effect="slide" start="0,0" end="0,1200" time="400" tween="cubic" easing="in" condition="Control.HasFocus(9920) | Control.IsVisible(9922) | Window.IsActive(songinformation) | Window.IsActive(musicinformation) | Window.IsActive(movieinformation)">Conditional</animation>
		<animation effect="slide" end="0,60" time="500" tween="sine" easing="out" condition="String.Contains(skin.string(mediaflags),off) + ![Control.IsVisible(57) | Control.IsVisible(70)]">Conditional</animation>
	</include>
	<include name="animation_timer1">
		<timeperimage>5000</timeperimage>
	</include>
	<include name="animation_timer2">
		<timeperimage>10000</timeperimage>
	</include>
	<include name="animation_timer3">
		<timeperimage>30000</timeperimage>
	</include>
	<include name="animation_timer4">
		<timeperimage>60000</timeperimage>
	</include>
	<include name="animation_timer5">
		<timeperimage>600000</timeperimage>
	</include>
	<include name="animation_timer6">
		<timeperimage>3600000</timeperimage>
	</include>
	<include name="animation_cdart">
		<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(cdart_seconds),2000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="4000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(cdart_seconds),4000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="8000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(cdart_seconds),8000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="16000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(cdart_seconds),16000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(cdart_seconds),20000)">Conditional</animation>
	</include>
	<include name="animation_viewscdart">
		<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(cdart_seconds),2000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="4000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(cdart_seconds),4000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="8000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(cdart_seconds),8000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="16000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(cdart_seconds),16000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(cdart_seconds),20000)">Conditional</animation>
	</include>
	<include name="animation_panscan">
		<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(animation_panscan)">Conditional</animation>
		<animation effect="slide" start="-15,-15" end="15,15" time="5000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(animation_panscan)">Conditional</animation>
		<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(Startup)">WindowOpen</animation>
	</include>
	<include name="animation_posterlite">
		<animation effect="fade" delay="1500" condition="String.Contains(skin.string(panel_seconds),1)">WindowOpen</animation>
		<animation effect="fade" delay="1500" condition="String.Contains(skin.string(panel_seconds),1)">Visible</animation>
		<animation effect="fade" delay="2500" condition="String.Contains(skin.string(panel_seconds),2)">WindowOpen</animation>
		<animation effect="fade" delay="2500" condition="String.Contains(skin.string(panel_seconds),2)">Visible</animation>
		<animation effect="fade" delay="3500" condition="String.Contains(skin.string(panel_seconds),3)">WindowOpen</animation>
		<animation effect="fade" delay="3500" condition="String.Contains(skin.string(panel_seconds),3)">Visible</animation>
		<animation effect="fade" delay="4500" condition="String.Contains(skin.string(panel_seconds),4)">WindowOpen</animation>
		<animation effect="fade" delay="4500" condition="String.Contains(skin.string(panel_seconds),4)">Visible</animation>
		<animation effect="fade" delay="5500" condition="String.Contains(skin.string(panel_seconds),5)">WindowOpen</animation>
		<animation effect="fade" delay="5500" condition="String.Contains(skin.string(panel_seconds),5)">Visible</animation>
	</include>
	<include name="animation_paneldimmer">
		<animation effect="fade" start="100" end="65" time="200" delay="1000" condition="String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" delay="2000" condition="String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" delay="3000" condition="String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" delay="4000" condition="String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4)">Conditional</animation>
		<animation effect="fade" start="100" end="65" time="200" delay="5000" condition="String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)">Conditional</animation>
	</include>
</includes>
