<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Aeon MQ 8 -->
	<!-- VISTA WALL - ID 56 -->
	<include name="Wall_Dimmer">
		<include content="viewwall_dimmer">	
			<param name="dim" value="50" />
			<param name="condition" value="String.Contains(skin.string(wallglass),50)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="45" />
			<param name="condition" value="String.Contains(skin.string(wallglass),45)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="40" />
			<param name="condition" value="String.Contains(skin.string(wallglass),40)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="35" />
			<param name="condition" value="String.Contains(skin.string(wallglass),35)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="30" />
			<param name="condition" value="String.Contains(skin.string(wallglass),30)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="25" />
			<param name="condition" value="String.Contains(skin.string(wallglass),25)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="20" />
			<param name="condition" value="String.Contains(skin.string(wallglass),20)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="15" />
			<param name="condition" value="String.Contains(skin.string(wallglass),15)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="10" />
			<param name="condition" value="String.Contains(skin.string(wallglass),10)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="5" />
			<param name="condition" value="String.Contains(skin.string(wallglass),05)" />
		</include>
		<include content="viewwall_dimmer">	
			<param name="dim" value="0" />
			<param name="condition" value="String.Contains(skin.string(wallglass),00)" />
		</include>
		<animation effect="fade" start="100" end="50" time="0" condition="String.Contains(skin.string(wallglass),50) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="45" time="0" condition="String.Contains(skin.string(wallglass),45) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="40" time="0" condition="String.Contains(skin.string(wallglass),40) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="35" time="0" condition="String.Contains(skin.string(wallglass),35) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="30" time="0" condition="String.Contains(skin.string(wallglass),30) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="25" time="0" condition="String.Contains(skin.string(wallglass),25) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="20" time="0" condition="String.Contains(skin.string(wallglass),20) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="15" time="0" condition="String.Contains(skin.string(wallglass),15) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="10" time="0" condition="String.Contains(skin.string(wallglass),10) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="5" time="0" condition="String.Contains(skin.string(wallglass),05) + Window.IsVisible(1167)">conditional</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="String.Contains(skin.string(wallglass),00) + Window.IsVisible(1167)">conditional</animation>
	</include>
	<include name="Wall_Plot">
		<visible>[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56)</visible>
	</include>
	<include name="Wall_ThumbDimmer">
		<left>0</left>
		<top>0</top>
		<texture>$VAR[texture_base]</texture>
		<colordiffuse>$INFO[skin.string(colortexture)]</colordiffuse>
		<animation effect="fade" start="100" end="45" condition="true">Conditional</animation>
		<include>animation_fade</include>
		<visible>[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + Control.HasFocus(56)</visible>
	</include>	
	<include name="ViewWallVideo">
		<control type="group">
			<animation effect="fade" time="400">VisibleChange</animation>
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<!-- discart normal com estojo -->
			<control type="group">
				<visible>!Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default)</visible>
				<animation effect="slide" start="0,0" end="178,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="352,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="526,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="700,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="874,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1048,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1222,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1396,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1570,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1744,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1918,0" time="0" condition="Container(56).Column(11)">Conditional</animation>
				<animation effect="slide" start="0,0" end="2092,0" time="0" condition="Container(56).Column(12)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,276" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,552" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="5" />
					<param name="top" value="120" />
					<param name="size" value="155" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-50" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<!-- discart normal sem estojo -->
			<control type="group">
				<visible>Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default)</visible>
				<animation effect="slide" start="0,0" end="148,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="297,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="445,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="593,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="741,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="889,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1037,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1185,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1333,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1481,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1629,0" time="0" condition="Container(56).Column(11)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1777,0" time="0" condition="Container(56).Column(12)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,207" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,414" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,621" time="0" condition="Container(56).Row(3)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="5" />
					<param name="top" value="160" />
					<param name="size" value="135" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-90" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<!-- discart medio com estojo -->
			<control type="group">
				<visible>!Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),mid)</visible>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="383,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="573,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="764,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="954,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1145,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1335,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1528,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1718,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,280" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,560" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="10" />
					<param name="top" value="120" />
					<param name="size" value="175" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-68" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<!-- discart medio sem estojo -->
			<control type="group">
				<visible>Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),mid)</visible>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="383,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="574,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="766,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="958,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1150,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1342,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1534,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1726,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,275" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,550" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="10" />
					<param name="top" value="160" />
					<param name="size" value="175" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-108" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<!-- discart grande com estojo -->
			<control type="group">
				<visible>!Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),big)</visible>
				<animation effect="slide" start="0,0" end="315,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="630,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="945,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1260,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1575,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,414" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="40" />
					<param name="top" value="180" />
					<param name="size" value="245" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-122" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<!-- discart grande sem estojo -->
			<control type="group">
				<visible>Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),big)</visible>
				<animation effect="slide" start="0,0" end="315,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="630,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="945,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1260,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1575,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,414" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<include content="mediainfo_disc">	
					<param name="left" value="40" />
					<param name="top" value="180" />
					<param name="size" value="265" />
					<param name="slidedisc1" value="0" />
					<param name="slidedisc2" value="-158" />
					<param name="slidecolumn" value="-10" />
					<param name="slidecolumncondition" value="Skin.HasSetting(norightlistvideocase)" />
					<param name="disclayout" value="$VAR[videodisc_layout]" />
					<param name="discart" value="$VAR[media_discart]" />
					<param name="hiddenfade" value="30" />
					<param name="visible" value="Window.IsActive(videos) + String.IsEqual(listitem.dbtype,movie) + System.IdleTime(1) + [String.IsEqual(skin.string(videodiscart),always) | String.IsEqual(skin.string(videodiscart),ifavailable) + ![String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.DiscArt)) + String.IsEmpty(ListItem.Art(discart))]]" />
				</include>
			</control>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>136</top>
				<width>2062</width>
				<height>830</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol></pagecontrol>
				<animation effect="slide" start="0,0" end="-93,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(12) + Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default) + Window.IsActive(videos) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | ListItem.IsCollection]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-120,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(10) + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default) + Window.IsActive(videos) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | ListItem.IsCollection]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-128,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(9) + String.IsEqual(skin.string(wallvideogrid),mid) + Window.IsActive(videos) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | ListItem.IsCollection]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-165,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(5) + String.IsEqual(skin.string(wallvideogrid),big) + Window.IsActive(videos) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | ListItem.IsCollection]">Conditional</animation>
				<visible>![Container.Content(episodes) | Container.Content(sets) | Container.Content(years)]</visible>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),default)" width="148" height="207">
					<!-- POSTER SEM ESTOJO - tamanho normal -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>3</left>
							<top>3</top>
							<width>141</width>
							<height>201</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="image">
							<left>110</left>
							<top>1</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),mid)" width="192" height="276">
					<!-- POSTER SEM ESTOJO - tamanho medio -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>3</left>
							<top>3</top>
							<width>186</width>
							<height>262</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="image">
							<left>156</left>
							<top>-2</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),big)" width="315" height="414">
					<!-- POSTER SEM ESTOJO - tamanho grande -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>27</left>
							<top>3</top>
							<width>290</width>
							<height>408</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="image">
							<left>270</left>
							<top>-2</top>
							<width>52</width>
							<height>52</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default)" width="174" height="276">
					<!-- POSTER ESTOJO - tamanho normal -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>6</left>
							<top>32</top>
							<width>165</width>
							<height>234</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="-9" />
							<param name="top" value="-8" />
							<param name="width" value="202" />
							<param name="height" value="296" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>
						<!-- codec -->						
						<control type="image">
							<left>64</left>
							<top>-6</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>134</left>
							<top>30</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),mid)" width="191" height="278">
					<!-- POSTER ESTOJO - tamanho medio -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>7</left>
							<top>26</top>
							<width>186</width>
							<height>243</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center" aligny="top">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="-9" />
							<param name="top" value="-15" />
							<param name="width" value="225" />
							<param name="height" value="308" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>
						<!-- codec -->
						<control type="image">
							<left>75</left>
							<top>-12</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>152</left>
							<top>26</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),big)" width="315" height="417">
					<!-- POSTER ESTOJO - tamanho grande -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>36</left>
							<top>38</top>
							<width>262</width>
							<height>366</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="12" />
							<param name="top" value="-22" />
							<param name="width" value="322" />
							<param name="height" value="462" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>
						<!-- codec -->
						<control type="image">
							<left>132</left>
							<top>-18</top>
							<width>75</width>
							<height>75</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>244</left>
							<top>36</top>
							<width>52</width>
							<height>52</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),default)" width="148" height="207">
					<!-- POSTER SEM ESTOJO - tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>141</width>
						<height>201</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<control type="image">
						<left>110</left>
						<top>1</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),mid)" width="192" height="276">
					<!-- POSTER SEM ESTOJO - tamanho medio -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>186</width>
						<height>262</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<control type="image">
						<left>158</left>
						<top>-3</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] + Skin.HasSetting(nowallvideocase) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios)] + String.IsEqual(skin.string(wallvideogrid),big)" width="315" height="414">
					<!-- POSTER SEM ESTOJO - tamanho grande -->
					<control type="image">
						<left>27</left>
						<top>3</top>
						<width>290</width>
						<height>408</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<control type="image">
						<left>270</left>
						<top>-2</top>
						<width>52</width>
						<height>52</height>
						<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),default)" width="174" height="276">
					<!-- POSTER ESTOJO - tamanho normal -->
					<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<control type="image">
							<left>6</left>
							<top>32</top>
							<width>165</width>
							<height>234</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="-9" />
							<param name="top" value="-8" />
							<param name="width" value="202" />
							<param name="height" value="296" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>
						<!-- codec -->
						<control type="image">
							<left>64</left>
							<top>-6</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>134</left>
							<top>30</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),mid)" width="191" height="278">
					<!-- POSTER ESTOJO - tamanho medio -->
					<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<control type="image">
							<left>7</left>
							<top>26</top>
							<width>186</width>
							<height>243</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center" aligny="top">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="-9" />
							<param name="top" value="-15" />
							<param name="width" value="225" />
							<param name="height" value="308" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>		
						<!-- codec -->
						<control type="image">
							<left>75</left>
							<top>-12</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>152</left>
							<top>26</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.IsEqual(skin.string(wallvideogrid),big)" width="315" height="414">
					<!-- POSTER ESTOJO - tamanho grande -->
					<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<control type="image">
							<left>36</left>
							<top>38</top>
							<width>262</width>
							<height>366</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<!-- estojo -->
						<include content="views_videocase">	
							<param name="left" value="12" />
							<param name="top" value="-22" />
							<param name="width" value="322" />
							<param name="height" value="462" />
							<param name="aligny" value="bottom" />
							<param name="flipy" value="false" />
							<param name="diffuse" value="" />
							<param name="item" value="0" />
						</include>
						<!-- codec -->
						<control type="image">						
							<left>132</left>
							<top>-18</top>
							<width>75</width>
							<height>75</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$INFO[skin.string(colorcodeccase)]">$VAR[videocodec0]</texture>
						</control>
						<control type="image">
							<left>244</left>
							<top>36</top>
							<width>52</width>
							<height>52</height>
							<texture colordiffuse="$INFO[skin.string(colorwatched)]">$VAR[watched_style]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</focusedlayout>
			</control>
			<control type="group">
				<!-- plot tamanho normal sem estojo -->
				<animation effect="slide" start="0,0" end="165,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="312,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="460,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="608,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="756,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="903,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1052,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="270,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="417,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="564,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="712,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="861,0" time="0" condition="Container(56).Column(11)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1008,0" time="0" condition="Container(56).Column(12)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,128" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,334" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,542" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,748" time="0" condition="Container(56).Row(3)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>[String.IsEqual(skin.string(wallvideogrid),default) + Skin.HasSetting(nowallvideocase) + !String.IsEqual(ListItem.Label,..)] + [Container.Content(movies) | Container.Content(musicvideos)] | String.IsEqual(skin.string(wallvideogrid),default) + !String.IsEqual(ListItem.Label,..) + ![Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>750</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[skin.string(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>750</width>
					<height>22</height>
					<label>$VAR[glasslistinfofocus]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>750</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>750</width>
					<height>170</height>
					<label>$VAR[plot]</label>
					<font>font_plot</font>
					<autoscroll delay="10000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho normal com estojo -->
				<animation effect="slide" start="0,0" end="195,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="369,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="543,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="717,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="891,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1065,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="352,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="526,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="700,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="874,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1048,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,135" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,411" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,687" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.IsEqual(skin.string(wallvideogrid),default) + ![Skin.HasSetting(nowallvideocase) | String.IsEqual(ListItem.Label,..)] + [Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>675</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[skin.string(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>675</width>
					<height>22</height>
					<label>$VAR[glasslistinfofocus]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>675</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>675</width>
					<height>234</height>
					<label>$VAR[plot]</label>
					<font>font_plot</font>
					<autoscroll delay="10000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho medio -->
				<animation effect="slide" start="0,0" end="210,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="402,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="594,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="786,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="978,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="188,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="572,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="764,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="956,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,130" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,406" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,682" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.IsEqual(skin.string(wallvideogrid),mid) + !String.IsEqual(ListItem.Label,..)</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>750</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[skin.string(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>750</width>
					<height>22</height>
					<label>$VAR[glasslistinfofocus]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>750</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>750</width>
					<height>234</height>
					<label>$VAR[plot]</label>
					<font>font_plot</font>
					<autoscroll delay="8000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho grande -->
				<animation effect="slide" start="0,0" end="338,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="652,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="968,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="255,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="570,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="885,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,128" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,542" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.IsEqual(skin.string(wallvideogrid),big) + !String.IsEqual(ListItem.Label,..)</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>690</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[skin.string(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>690</width>
					<height>22</height>
					<label>$VAR[glasslistinfofocus]</label>
					<font>font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>690</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>690</width>
					<height>363</height>
					<label>$VAR[plot]</label>
					<font>font_plot</font>
					<autoscroll delay="8000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
		</control>
	</include>
	<include name="ViewWallAudio">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>150</top>
				<width>1928</width>
				<height>801</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol></pagecontrol>
				<visible>Window.IsActive(musicplaylist) | Window.IsActive(music)</visible>
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
					</control>
				</itemlayout>
				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
	<include name="ViewWallPrograms">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>150</top>
				<width>1928</width>
				<height>801</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol></pagecontrol>
				<visible>Window.IsActive(programs)</visible>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>160</width>
						<height>160</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>273</width>
						<height>276</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>482</width>
						<height>414</height>
					</control>
				</itemlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
	<include name="ViewWallPics">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>150</top>
				<width>1928</width>
				<height>801</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol></pagecontrol>
				<visible>Window.IsActive(pictures)</visible>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>160</width>
						<height>160</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>273</width>
						<height>276</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>482</width>
						<height>414</height>
					</control>
				</itemlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
</includes>
